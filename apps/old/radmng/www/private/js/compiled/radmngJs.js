/* Generated by the Nim Compiler v1.2.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI11285002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11590002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11590004 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11201557 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1006907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4550232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4805011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11275002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10446084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI179 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI10446041 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10446045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10446043 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI856017 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI10446073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10446070 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10446067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6251 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11201049 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11201048 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9325042 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9345015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI163 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI11026046 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI143 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI160043 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6286 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI112 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI6249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6249.node = NNI6249;
var NNI6219 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6219.node = NNI6219;
NTI6281.base = NTI6217;
NTI6286.base = NTI6217;
var NNI6217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6281, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI112, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI112, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6286, name: "up", sons: null}]};
NTI6217.node = NNI6217;
var NNI6008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6008.node = NNI6008;
NTI6217.base = NTI6008;
NTI6219.base = NTI6217;
NTI6249.base = NTI6219;
var NNI160043 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI114, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}]};
NTI160043.node = NNI160043;
var NNI6237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6237.node = NNI6237;
var NNI6233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6233.node = NNI6233;
NTI6233.base = NTI6219;
NTI6237.base = NTI6233;
var NNI6253 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6253.node = NNI6253;
NTI6253.base = NTI6219;
var NNI11026046 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "scheme", len: 0, typ: NTI112, name: "scheme", sons: null}, 
{kind: 1, offset: "username", len: 0, typ: NTI112, name: "username", sons: null}, 
{kind: 1, offset: "password", len: 0, typ: NTI112, name: "password", sons: null}, 
{kind: 1, offset: "hostname", len: 0, typ: NTI112, name: "hostname", sons: null}, 
{kind: 1, offset: "port", len: 0, typ: NTI112, name: "port", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI112, name: "path", sons: null}, 
{kind: 1, offset: "query", len: 0, typ: NTI112, name: "query", sons: null}, 
{kind: 1, offset: "anchor", len: 0, typ: NTI112, name: "anchor", sons: null}, 
{kind: 1, offset: "opaque", len: 0, typ: NTI163, name: "opaque", sons: null}]};
NTI11026046.node = NNI11026046;
var NNI6241 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6241.node = NNI6241;
NTI6241.base = NTI6219;
NTI9345015.base = NTI112;
NTI9325042.base = NTI112;
NTI11201049.base = NTI112;
NTI11201048.base = NTI11201049;
var NNI6251 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6251.node = NNI6251;
NTI6251.base = NTI6219;
var NNI10446041 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI10446041, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10446041, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10446041, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10446041, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10446041, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10446041, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10446041, name: "JArray", len: 0, sons: null}}};
NTI10446041.node = NNI10446041;
NTI10446084.base = NTI10446043;
var NNI10446045 = {kind: 3, offset: "kind", len: 7, typ: NTI10446041, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI112, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI179, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI104, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI163, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI10446067, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI10446084, name: "elems", sons: null}]]};
NTI10446045.node = NNI10446045;
NTI10446043.base = NTI10446045;
var NNI10446073 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI856017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI112, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI10446043, name: "Field3", sons: null}]};
NTI10446073.node = NNI10446073;
NTI10446070.base = NTI10446073;
var NNI10446067 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI10446070, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI143, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI143, name: "last", sons: null}]};
NTI10446067.node = NNI10446067;
var NNI6235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6235.node = NNI6235;
NTI6235.base = NTI6233;
var NNI11275002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI112, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10446043, name: "Field1", sons: null}]};
NTI11275002.node = NNI11275002;
var NNI4805011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI4550232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI4805011.node = NNI4805011;
var NNI6243 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6243.node = NNI6243;
var NNI6221 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6221.node = NNI6221;
NTI6221.base = NTI6217;
NTI6243.base = NTI6221;
var NNI1006907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI143, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI1006907.node = NNI1006907;
NTI11201557.base = NTI112;
var NNI11590004 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI112, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10446043, name: "Field1", sons: null}]};
NTI11590004.node = NNI11590004;
var NNI11590002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI112, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10446043, name: "Field1", sons: null}]};
NTI11590002.node = NNI11590002;
var NNI6245 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6245.node = NNI6245;
NTI6245.base = NTI6243;
var NNI11285002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI112, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10446043, name: "Field1", sons: null}]};
NTI11285002.node = NNI11285002;
function toJSStr(s_225096) {
                    var Tmp5;
            var Tmp7;

  var result_225097 = null;

    var res_225170 = new_seq_225128((s_225096 != null ? s_225096.length : 0));
    var i_225172 = 0;
    var j_225174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_225172 < (s_225096 != null ? s_225096.length : 0))) break L2;
          var c_225175 = s_225096[i_225172];
          if ((c_225175 < 128)) {
          res_225170[j_225174] = String.fromCharCode(c_225175);
          i_225172 += 1;
          }
          else {
            var helper_225198 = new_seq_225128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_225199 = c_225175.toString(16);
                  if (((code_225199 != null ? code_225199.length : 0) == 1)) {
                  if (helper_225198 != null) { helper_225198.push("%0"); } else { helper_225198 = ["%0"]; };
                  }
                  else {
                  if (helper_225198 != null) { helper_225198.push("%"); } else { helper_225198 = ["%"]; };
                  }
                  
                  if (helper_225198 != null) { helper_225198.push(code_225199); } else { helper_225198 = [code_225199]; };
                  i_225172 += 1;
                    if (((s_225096 != null ? s_225096.length : 0) <= i_225172)) Tmp5 = true; else {                      Tmp5 = (s_225096[i_225172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_225175 = s_225096[i_225172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_225170[j_225174] = decodeURIComponent(helper_225198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_225170[j_225174] = helper_225198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_225174 += 1;
        }
    } while(false);
    if (res_225170 === null) res_225170 = [];
               if (res_225170.length < j_225174) { for (var i=res_225170.length;i<j_225174;++i) res_225170.push(null); }
               else { res_225170.length = j_225174; };
    result_225097 = res_225170.join("");

  return result_225097;

}
function makeNimstrLit(c_225062) {
      var ln = c_225062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_225062.charCodeAt(i);
  }
  return result;
  

  
}
function eqStrings(a_230222, b_230223) {
        if (a_230222 == b_230223) return true;
    if (a_230222 === null && b_230223.length == 0) return true;
    if (b_230223 === null && a_230222.length == 0) return true;
    if ((!a_230222) || (!b_230223)) return false;
    var alen = a_230222.length;
    if (alen != b_230223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_230222[i] != b_230223[i]) return false;
    return true;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_240023, src_240024, ti_240025) {
  var result_245219 = null;

    switch (ti_240025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_235401(ti_240025))) {
      result_245219 = src_240024;
      }
      else {
        result_245219 = [src_240024[0], src_240024[1]];
      }
      
      break;
    case 19:
            if (dest_240023 === null || dest_240023 === undefined) {
        dest_240023 = {};
      }
      else {
        for (var key in dest_240023) { delete dest_240023[key]; }
      }
      for (var key in src_240024) { dest_240023[key] = src_240024[key]; }
      result_245219 = dest_240023;
    
      break;
    case 18:
    case 17:
      if (!((ti_240025.base == null))) {
      result_245219 = nimCopy(dest_240023, src_240024, ti_240025.base);
      }
      else {
      if ((ti_240025.kind == 17)) {
      result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {m_type: ti_240025} : dest_240023;
      }
      else {
        result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {} : dest_240023;
      }
      }
      nimCopyAux(result_245219, src_240024, ti_240025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_240024 === null) {
        result_245219 = null;
      }
      else {
        if (dest_240023 === null || dest_240023 === undefined) {
          dest_240023 = new Array(src_240024.length);
        }
        else {
          dest_240023.length = src_240024.length;
        }
        result_245219 = dest_240023;
        for (var i = 0; i < src_240024.length; ++i) {
          result_245219[i] = nimCopy(result_245219[i], src_240024[i], ti_240025.base);
        }
      }
    
      break;
    case 28:
            if (src_240024 !== null) {
        result_245219 = src_240024.slice(0);
      }
    
      break;
    default: 
      result_245219 = src_240024;
      break;
    }

  return result_245219;

}
function cstrToNimstr(c_225079) {
      var ln = c_225079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_225079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_225079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function arrayConstr(len_250067, value_250068, typ_250069) {
        var result = new Array(len_250067);
    for (var i = 0; i < len_250067; ++i) result[i] = nimCopy(null, value_250068, typ_250069);
    return result;
  

  
}
function raiseException(e_190218, ename_190219) {
    e_190218.name = ename_190219;
    if ((excHandler == 0)) {
    unhandledException(e_190218);
    }
    
    e_190218.trace = nimCopy(null, raw_write_stack_trace_180059(), NTI112);
    throw e_190218;

  
}
function chckIndx(i_250086, a_250087, b_250088) {
      var Tmp1;

  var result_250089 = 0;

  BeforeRet: do {
      if (!(a_250087 <= i_250086)) Tmp1 = false; else {        Tmp1 = (i_250086 <= b_250088);      }    if (Tmp1) {
    result_250089 = i_250086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_250086, a_250087, b_250088);
    }
    
  } while (false);

  return result_250089;

}
function addInt(a_230403, b_230404) {
        var result = a_230403 + b_230404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function chckRange(i_255016, a_255017, b_255018) {
      var Tmp1;

  var result_255019 = 0;

  BeforeRet: do {
      if (!(a_255017 <= i_255016)) Tmp1 = false; else {        Tmp1 = (i_255016 <= b_255018);      }    if (Tmp1) {
    result_255019 = i_255016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_255019;

}
function nimMax(a_230821, b_230822) {
    var Tmp1;

  var result_230823 = 0;

  BeforeRet: do {
    if ((b_230822 <= a_230821)) {
    Tmp1 = a_230821;
    }
    else {
    Tmp1 = b_230822;
    }
    
    result_230823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230823;

}
function subInt(a_230421, b_230422) {
        var result = a_230421 - b_230422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function nimMin(a_230803, b_230804) {
    var Tmp1;

  var result_230805 = 0;

  BeforeRet: do {
    if ((a_230803 <= b_230804)) {
    Tmp1 = a_230803;
    }
    else {
    Tmp1 = b_230804;
    }
    
    result_230805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230805;

}
function mnewString(len_230044) {
        return new Array(len_230044);
  

  
}
var ConstSet2 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet3 = setConstr(63, 35);
var ConstSet4 = setConstr([65, 90]);
function addChar(x_275031, c_275032) {
    x_275031.push(c_275032);

  
}
var ConstSet5 = setConstr(35);
var ConstSet6 = setConstr();
var ConstSet7 = setConstr(43, [45, 46], [48, 57], [65, 90], [97, 122]);
var ConstSet8 = setConstr(47, 63, 35);
var ConstSet9 = setConstr(6);
function raiseFieldError(f_220047) {
    raiseException({message: nimCopy(null, f_220047, NTI112), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");

  
}
var ConstSet10 = setConstr(5);
var ConstSet11 = setConstr(6);
var ConstSet12 = setConstr(5);
var ConstSet13 = setConstr(4);
var ConstSet14 = setConstr(2);
var ConstSet15 = setConstr(3);
var ConstSet16 = setConstr(1);
function divInt(a_230457, b_230458) {
        if (b_230458 == 0) raiseDivByZero();
    if (b_230458 == -1 && a_230457 == 2147483647) raiseOverflow();
    return Math.trunc(a_230457 / b_230458);
  

  
}
function mulInt(a_230439, b_230440) {
        var result = a_230439 * b_230440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function modInt(a_230475, b_230476) {
        if (b_230476 == 0) raiseDivByZero();
    if (b_230476 == -1 && a_230475 == 2147483647) raiseOverflow();
    return Math.trunc(a_230475 % b_230476);
  

  
}
function genericReset(x_250044, ti_250045) {
  var result_250046 = null;

    result_250046 = null;
    switch (ti_250045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (is_fat_pointer_235401(ti_250045)) {
              result_250046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_250046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_250045.kind == 17)) {
      result_250046 = {m_type: ti_250045};
      }
      else {
        result_250046 = {};
      }
      
      break;
    case 24:
    case 27:
            result_250046 = [];
    
      break;
    case 4:
    case 16:
            result_250046 = new Array(x_250044.length);
      for (var i = 0; i < x_250044.length; ++i) {
        result_250046[i] = genericReset(x_250044[i], ti_250045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_250046;

}
var ConstSet17 = setConstr(5);
var ConstSet18 = setConstr(6);
var ConstSet19 = setConstr(5);
var ConstSet20 = setConstr(4);
var ConstSet21 = setConstr(5);
var ConstSet22 = setConstr(60, 62, 94);
var ConstSet23 = setConstr(60, 62, 94);
var ConstSet24 = setConstr(45, 43, 32);
var ConstSet25 = setConstr([48, 57]);
var ConstSet26 = setConstr([48, 57]);
var ConstSet27 = setConstr([48, 57]);
var ConstSet28 = setConstr([65, 90], [97, 122]);
var ConstSet29 = setConstr(5);
var ConstSet30 = setConstr(1);
function reprEnum(e_315480, typ_315481) {
  var result_315482 = null;

  var F={procname:"system.reprEnum",prev:framePtr,filename:"reprjs.nim",line:0};
  framePtr = F;
    if (!(is_undefined_315483(typ_315481.node.sons[e_315480]))) {
    F.line = 38;
    result_315482 = nimCopy(null, makeNimstrLit(typ_315481.node.sons[e_315480].name), NTI112);
    }
    else {
      F.line = 40;
      result_315482 = nimCopy(null, (cstrToNimstr((e_315480)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI112);
    }
    
  framePtr = F.prev;

  return result_315482;

}
var ConstSet31 = setConstr(5);
var ConstSet32 = setConstr(5);
var nim_program_result = 0;
var global_raise_hook_142018 = [null];
var local_raise_hook_142023 = [null];
var out_of_mem_hook_142026 = [null];
var unhandled_exception_hook_142031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var object_id_860031 = [0];
var last_visited_page_11241014 = [null];
var heartbeat_interval_11676014 = [null];
var wnd_11676019 = (window);
function lv_instance_11241054() {
  var result_11241056 = null;

  var F={procname:"liveview.lvInstance",prev:framePtr,filename:"liveview.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 15;
    result_11241056 = (window)["LiveView"];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11241056;

}
function lv_init_11241028(lv_11241030) {
  var F={procname:"liveview.lvInit",prev:framePtr,filename:"liveview.nim",line:0};
  framePtr = F;
    F.line = 12;
    (window)["LiveView"] = lv_11241030;
  framePtr = F.prev;

  
}
function new_seq_225128(len_225131) {
  var result_225133 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_225133 = new Array(len_225131); for (var i=0;i<len_225131;++i) {result_225133[i]=null;}  framePtr = F.prev;

  return result_225133;

}
function new_ws_1281053(host_1281055) {
  var result_1281056 = null;

  var F={procname:"init.newWS",prev:framePtr,filename:"init.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 27;
    result_1281056 = webSocket(toJSStr(host_1281055));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1281056;

}
function is_fat_pointer_235401(ti_235403) {
  var result_235404 = false;

  BeforeRet: do {
    result_235404 = !((ConstSet1[ti_235403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_235404;

}
function nimCopyAux(dest_240028, src_240029, n_240031) {
    switch (n_240031.kind) {
    case 0:
      break;
    case 1:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_240031.sons.length; i++) {
      nimCopyAux(dest_240028, src_240029, n_240031.sons[i]);
    }
    
      break;
    case 3:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
      for (var i = 0; i < n_240031.sons.length; ++i) {
        nimCopyAux(dest_240028, src_240029, n_240031.sons[i][1]);
      }
    
      break;
    }

  
}
function lv_last_visited_page_11290095() {
  var result_11290097 = null;

  var F={procname:"liveview.lvLastVisitedPage",prev:framePtr,filename:"liveview.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 36;
    result_11290097 = nimCopy(null, last_visited_page_11241014[0], NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11290097;

}
function add_142042(x_142045, x_142045_Idx, y_142046) {
          if (x_142045[x_142045_Idx] === null) { x_142045[x_142045_Idx] = []; }
      var off = x_142045[x_142045_Idx].length;
      x_142045[x_142045_Idx].length += y_142046.length;
      for (var i = 0; i < y_142046.length; ++i) {
        x_142045[x_142045_Idx][off+i] = y_142046.charCodeAt(i);
      }
    

  
}
function aux_write_stack_trace_160038(f_160040) {
          var Tmp3;

  var result_160041 = [null];

    var it_160049 = f_160040;
    var i_160051 = 0;
    var total_160053 = 0;
    var temp_frames_160060 = arrayConstr(64, {Field0: null, Field1: 0}, NTI160043);
    L1: do {
        L2: while (true) {
          if (!!((it_160049 == null))) Tmp3 = false; else {            Tmp3 = (i_160051 <= 63);          }        if (!Tmp3) break L2;
          temp_frames_160060[i_160051].Field0 = it_160049.procname;
          temp_frames_160060[i_160051].Field1 = it_160049.line;
          i_160051 += 1;
          total_160053 += 1;
          it_160049 = it_160049.prev;
        }
    } while(false);
    L4: do {
        L5: while (true) {
        if (!!((it_160049 == null))) break L5;
          total_160053 += 1;
          it_160049 = it_160049.prev;
        }
    } while(false);
    result_160041[0] = nimCopy(null, [], NTI112);
    if (!((total_160053 == i_160051))) {
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit("(")); } else { result_160041[0] = makeNimstrLit("("); };
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(cstrToNimstr(((total_160053 - i_160051))+"")); } else { result_160041[0] = cstrToNimstr(((total_160053 - i_160051))+"").slice(); };
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_160041[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
    }
    
    L6: do {
      var j_175236 = 0;
      var colontmp__11840036 = 0;
      colontmp__11840036 = (i_160051 - 1);
      var res_11840041 = colontmp__11840036;
      L7: do {
          L8: while (true) {
          if (!(0 <= res_11840041)) break L8;
            j_175236 = res_11840041;
            add_142042(result_160041, 0, temp_frames_160060[j_175236].Field0);
            if ((0 < temp_frames_160060[j_175236].Field1)) {
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit(", line: ")); } else { result_160041[0] = makeNimstrLit(", line: "); };
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(cstrToNimstr((temp_frames_160060[j_175236].Field1)+"")); } else { result_160041[0] = cstrToNimstr((temp_frames_160060[j_175236].Field1)+"").slice(); };
            }
            
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit("\x0A")); } else { result_160041[0] = makeNimstrLit("\x0A"); };
            res_11840041 -= 1;
          }
      } while(false);
    } while(false);

  return result_160041[0];

}
function raw_write_stack_trace_180059() {
  var result_180061 = null;

    if (!((framePtr == null))) {
    result_180061 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_160038(framePtr) || []), NTI112);
    }
    else {
      result_180061 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI112);
    }
    

  return result_180061;

}
function unhandledException(e_185059) {
    var buf_185060 = [[]];
    if (!(((e_185059.message != null ? e_185059.message.length : 0) == 0))) {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(e_185059.message); } else { buf_185060[0] = e_185059.message.slice(); };
    }
    else {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit(" [")); } else { buf_185060[0] = makeNimstrLit(" ["); };
    add_142042(buf_185060, 0, e_185059.name);
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_185060[0] = makeNimstrLit("]\x0A"); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(raw_write_stack_trace_180059()); } else { buf_185060[0] = raw_write_stack_trace_180059().slice(); };
    var cbuf_190201 = toJSStr(buf_185060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_190201);
  }
  else {
    throw cbuf_190201;
  }
  

  
}
function raiseIndexError(i_210047, a_210048, b_210049) {
    var Tmp1;

    if ((b_210049 < a_210048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_210047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_210048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_210049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI112), parent: null, m_type: NTI6249, name: null, trace: null, up: null}, "IndexError");

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6237, name: null, trace: null, up: null}, "OverflowError");

  
}
function nsuFindChar(s_9720216, sub_9720217, start_9720218, last_9720219) {
    var Tmp1;

  var result_9720221 = 0;

  var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1855;
    if ((last_9720219 == 0)) {
    Tmp1 = (s_9720216 != null ? (s_9720216.length-1) : -1);
    }
    else {
    Tmp1 = last_9720219;
    }
    
    var last_9720223 = Tmp1;
    L2: do {
      F.line = 1867;
      var i_9720606 = 0;
      F.line = 66;
      var colontmp__11840056 = 0;
      F.line = 1867;
      colontmp__11840056 = start_9720218;
      F.line = 77;
      var res_11840057 = colontmp__11840056;
      L3: do {
        F.line = 78;
          L4: while (true) {
          if (!(res_11840057 <= last_9720223)) break L4;
            F.line = 1867;
            i_9720606 = res_11840057;
            if ((sub_9720217 == s_9720216[chckIndx(i_9720606, 0, (s_9720216 != null ? s_9720216.length : 0)+0-1)-0])) {
            F.line = 1868;
            result_9720221 = i_9720606;
            break BeforeRet;
            }
            
            F.line = 80;
            res_11840057 = addInt(res_11840057, 1);
          }
      } while(false);
    } while(false);
    F.line = 1869;
    result_9720221 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9720221;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6253, name: null, trace: null, up: null}, "RangeError");

  
}
function substr_341022(s_341024, first_341025, last_341026) {
  var result_341027 = null;

  var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2943;
    var first_341028 = nimMax(first_341025, 0);
    F.line = 2944;
    var l_341030 = nimMax(addInt(subInt(nimMin(last_341026, (s_341024 != null ? (s_341024.length-1) : -1)), first_341028), 1), 0);
    F.line = 2945;
    result_341027 = nimCopy(null, mnewString(chckRange(l_341030, 0, 2147483647)), NTI112);
    L1: do {
      F.line = 2946;
      var i_341039 = 0;
      F.line = 66;
      var colontmp__11840065 = 0;
      F.line = 2946;
      colontmp__11840065 = subInt(l_341030, 1);
      F.line = 77;
      var res_11840066 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_11840066 <= colontmp__11840065)) break L3;
            F.line = 2946;
            i_341039 = res_11840066;
            F.line = 2947;
            result_341027[chckIndx(i_341039, 0, (result_341027 != null ? result_341027.length : 0)+0-1)-0] = s_341024[chckIndx(addInt(i_341039, first_341028), 0, (s_341024 != null ? s_341024.length : 0)+0-1)-0];
            F.line = 80;
            res_11840066 = addInt(res_11840066, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_341027;

}
function substr_341053(s_341055, first_341056) {
  var result_341058 = null;

  var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2950;
    result_341058 = nimCopy(null, substr_341022(s_341055, first_341056, (s_341055 != null ? (s_341055.length-1) : -1)), NTI112);
  framePtr = F.prev;

  return result_341058;

}
function nsuInitSkipTable(a_9715081, sub_9715082) {
  var F={procname:"strutils.initSkipTable",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1791;
    var m_9715083 = (sub_9715082 != null ? sub_9715082.length : 0);
    F.line = 1792;
    var i_9715085 = 0;
    L1: do {
      F.line = 1793;
        L2: while (true) {
        if (!(i_9715085 <= 248)) break L2;
          F.line = 1794;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 0), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1795;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 1), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1796;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 2), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1797;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 3), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1798;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 4), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1799;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 5), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1800;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 6), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1801;
          a_9715081[chckIndx(chckRange(addInt(i_9715085, 7), 0, 255), 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = m_9715083;
          F.line = 1802;
          i_9715085 = addInt(i_9715085, 8);
        }
    } while(false);
    L3: do {
      F.line = 1804;
      var i_9715101 = 0;
      F.line = 104;
      var colontmp__11840073 = 0;
      F.line = 1804;
      colontmp__11840073 = subInt(m_9715083, 1);
      F.line = 106;
      var i_11840074 = 0;
      L4: do {
        F.line = 107;
          L5: while (true) {
          if (!(i_11840074 < colontmp__11840073)) break L5;
            F.line = 1804;
            i_9715101 = i_11840074;
            F.line = 1805;
            a_9715081[chckIndx(sub_9715082[chckIndx(i_9715101, 0, (sub_9715082 != null ? sub_9715082.length : 0)+0-1)-0], 0, (a_9715081 != null ? a_9715081.length : 0)+0-1)-0] = subInt(subInt(m_9715083, 1), i_9715101);
            F.line = 109;
            i_11840074 = addInt(i_11840074, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function nsuFindStrA(a_9715117, s_9715118, sub_9715119, start_9715120, last_9715121) {
    var Tmp1;

  var result_9715123 = 0;

  var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1815;
    if ((last_9715121 == 0)) {
    Tmp1 = (s_9715118 != null ? (s_9715118.length-1) : -1);
    }
    else {
    Tmp1 = last_9715121;
    }
    
    var last_9715125 = Tmp1;
    F.line = 1816;
    var sub_last_9715126 = subInt((sub_9715119 != null ? sub_9715119.length : 0), 1);
    if ((sub_last_9715126 == -1)) {
    F.line = 1821;
    result_9715123 = start_9715120;
    break BeforeRet;
    }
    
    F.line = 1825;
    var skip_9715127 = start_9715120;
    L2: do {
      F.line = 1827;
        L3: while (true) {
        if (!(sub_last_9715126 <= subInt(last_9715125, skip_9715127))) break L3;
          F.line = 1828;
          var i_9720001 = sub_last_9715126;
          L4: do {
            F.line = 1829;
              L5: while (true) {
              if (!(s_9715118[chckIndx(addInt(skip_9715127, i_9720001), 0, (s_9715118 != null ? s_9715118.length : 0)+0-1)-0] == sub_9715119[chckIndx(i_9720001, 0, (sub_9715119 != null ? sub_9715119.length : 0)+0-1)-0])) break L5;
                if ((i_9720001 == 0)) {
                F.line = 1831;
                result_9715123 = skip_9715127;
                break BeforeRet;
                }
                
                F.line = 1832;
                i_9720001 = subInt(i_9720001, 1);
              }
          } while(false);
          F.line = 1833;
          skip_9715127 = addInt(skip_9715127, a_9715117[chckIndx(s_9715118[chckIndx(addInt(skip_9715127, sub_last_9715126), 0, (s_9715118 != null ? s_9715118.length : 0)+0-1)-0], 0, (a_9715117 != null ? a_9715117.length : 0)+0-1)-0]);
        }
    } while(false);
    F.line = 1834;
    result_9715123 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9715123;

}
function nsuReplaceStr(s_9790016, sub_9790017, by_9790018) {
  var result_9790019 = null;

  var F={procname:"strutils.replace",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2056;
    result_9790019 = nimCopy(null, [], NTI112);
    F.line = 2057;
    var sub_len_9790020 = (sub_9790017 != null ? sub_9790017.length : 0);
    if ((sub_len_9790020 == 0)) {
    F.line = 2059;
    result_9790019 = nimCopy(null, s_9790016, NTI112);
    }
    else {
    if ((sub_len_9790020 == 1)) {
    F.line = 2063;
    var c_9790021 = sub_9790017[chckIndx(0, 0, (sub_9790017 != null ? sub_9790017.length : 0)+0-1)-0];
    F.line = 2064;
    var last_9790023 = (s_9790016 != null ? (s_9790016.length-1) : -1);
    F.line = 2065;
    var i_9790025 = 0;
    L1: do {
      F.line = 2066;
        L2: while (true) {
        if (!true) break L2;
          F.line = 2067;
          var j_9790026 = nsuFindChar(s_9790016, c_9790021, chckRange(i_9790025, 0, 2147483647), last_9790023);
          if ((j_9790026 < 0)) {
          F.line = 2068;
          break L1;
          }
          
          F.line = 2069;
          if (result_9790019 != null) { result_9790019 = (result_9790019).concat(substr_341022(s_9790016, i_9790025, subInt(j_9790026, 1))); } else { result_9790019 = substr_341022(s_9790016, i_9790025, subInt(j_9790026, 1)).slice(); };
          F.line = 2070;
          if (result_9790019 != null) { result_9790019 = (result_9790019).concat(by_9790018); } else { result_9790019 = by_9790018.slice(); };
          F.line = 2071;
          i_9790025 = addInt(j_9790026, sub_len_9790020);
        }
    } while(false);
    F.line = 2073;
    if (result_9790019 != null) { result_9790019 = (result_9790019).concat(substr_341053(s_9790016, i_9790025)); } else { result_9790019 = substr_341053(s_9790016, i_9790025).slice(); };
    }
    else {
      F.line = 2075;
      var a_9790027 = [new Int32Array(256)];
      F.line = 2076;
      nsuInitSkipTable(a_9790027[0], sub_9790017);
      F.line = 2077;
      var last_9790030 = (s_9790016 != null ? (s_9790016.length-1) : -1);
      F.line = 2078;
      var i_9790032 = 0;
      L3: do {
        F.line = 2079;
          L4: while (true) {
          if (!true) break L4;
            F.line = 2080;
            var j_9790033 = nsuFindStrA(a_9790027[0], s_9790016, sub_9790017, chckRange(i_9790032, 0, 2147483647), last_9790030);
            if ((j_9790033 < 0)) {
            F.line = 2081;
            break L3;
            }
            
            F.line = 2082;
            if (result_9790019 != null) { result_9790019 = (result_9790019).concat(substr_341022(s_9790016, i_9790032, subInt(j_9790033, 1))); } else { result_9790019 = substr_341022(s_9790016, i_9790032, subInt(j_9790033, 1)).slice(); };
            F.line = 2083;
            if (result_9790019 != null) { result_9790019 = (result_9790019).concat(by_9790018); } else { result_9790019 = by_9790018.slice(); };
            F.line = 2084;
            i_9790032 = addInt(j_9790033, sub_len_9790020);
          }
      } while(false);
      F.line = 2086;
      if (result_9790019 != null) { result_9790019 = (result_9790019).concat(substr_341053(s_9790016, i_9790032)); } else { result_9790019 = substr_341053(s_9790016, i_9790032).slice(); };
    }
    }
  framePtr = F.prev;

  return result_9790019;

}
function lv_current_page_11290079() {
  var result_11290081 = null;

  var F={procname:"liveview.lvCurrentPage",prev:framePtr,filename:"liveview.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 33;
    result_11290081 = nimCopy(null, nsuReplaceStr(cstrToNimstr(window.location.href), makeNimstrLit("#"), []), NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11290081;

}
function nsuStrip(s_9970118, leading_9970119, trailing_9970120, chars_9970122) {
          var Tmp5;

  var result_9970123 = null;

  var F={procname:"strutils.strip",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2784;
    var first_9970125 = 0;
    F.line = 2785;
    var last_9970126 = subInt((s_9970118 != null ? s_9970118.length : 0), 1);
    if (leading_9970119) {
    L1: do {
      F.line = 2787;
        L2: while (true) {
        if (!((first_9970125 <= last_9970126) && (chars_9970122[s_9970118[chckIndx(first_9970125, 0, (s_9970118 != null ? s_9970118.length : 0)+0-1)-0]] != undefined))) break L2;
          F.line = 2787;
          first_9970125 = addInt(first_9970125, 1);
        }
    } while(false);
    }
    
    if (trailing_9970120) {
    L3: do {
      F.line = 2789;
        L4: while (true) {
          if (!(0 <= last_9970126)) Tmp5 = false; else {            Tmp5 = (chars_9970122[s_9970118[chckIndx(last_9970126, 0, (s_9970118 != null ? s_9970118.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp5) break L4;
          F.line = 2789;
          last_9970126 = subInt(last_9970126, 1);
        }
    } while(false);
    }
    
    F.line = 2790;
    result_9970123 = nimCopy(null, substr_341022(s_9970118, first_9970125, last_9970126), NTI112);
  framePtr = F.prev;

  return result_9970123;

}
function get_query_string_11210230(self_11210232) {
  var result_11210233 = null;

  var F={procname:"uri3.getQueryString",prev:framePtr,filename:"uri3.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 259;
    var query_11210234 = [];
    L1: do {
      F.line = 260;
      var i_11210249 = 0;
      F.line = 66;
      var colontmp__11840080 = 0;
      F.line = 260;
      colontmp__11840080 = (self_11210232.queries != null ? (self_11210232.queries.length-1) : -1);
      F.line = 77;
      var res_11840081 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_11840081 <= colontmp__11840080)) break L3;
            F.line = 260;
            i_11210249 = res_11840081;
            L4: do {
              if (!(((self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0] != null ? self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0].length : 0) == 2))) {
              F.line = 261;
              break L4;
              }
              
              F.line = 262;
              if (query_11210234 != null) { query_11210234 = (query_11210234).concat((self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0][chckIndx(0, 0, (self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0] != null ? self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0].length : 0)+0-1)-0] || []).concat(makeNimstrLit("=") || [],self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0][chckIndx(1, 0, (self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0] != null ? self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0].length : 0)+0-1)-0] || [])); } else { query_11210234 = (self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0][chckIndx(0, 0, (self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0] != null ? self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0].length : 0)+0-1)-0] || []).concat(makeNimstrLit("=") || [],self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0][chckIndx(1, 0, (self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0] != null ? self_11210232.queries[chckIndx(i_11210249, 0, (self_11210232.queries != null ? self_11210232.queries.length : 0)+0-1)-0].length : 0)+0-1)-0] || []).slice(); };
              if (!((i_11210249 == (self_11210232.queries != null ? (self_11210232.queries.length-1) : -1)))) {
              F.line = 264;
              if (query_11210234 != null) { query_11210234 = (query_11210234).concat(makeNimstrLit("&")); } else { query_11210234 = makeNimstrLit("&"); };
              }
              
            } while(false);
            F.line = 80;
            res_11840081 = addInt(res_11840081, 1);
          }
      } while(false);
    } while(false);
    if (!(eqStrings(nsuStrip(query_11210234, true, true, ConstSet2), []))) {
    F.line = 267;
    result_11210233 = nimCopy(null, (makeNimstrLit("?") || []).concat(query_11210234 || []), NTI112);
    break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_11210233;

}
function init_uri_11045113() {
  var result_11045115 = {scheme: null, username: null, password: null, hostname: null, port: null, path: null, query: null, anchor: null, opaque: false};

  var F={procname:"uri.initUri",prev:framePtr,filename:"uri.nim",line:0};
  framePtr = F;
    F.line = 205;
    nimCopy(result_11045115, {scheme: [], username: [], password: [], hostname: [], port: [], path: [], query: [], anchor: [], opaque: false}, NTI11026046);
  framePtr = F.prev;

  return result_11045115;

}
function reset_uri_11045144(uri_11045147) {
  var F={procname:"uri.resetUri",prev:framePtr,filename:"uri.nim",line:0};
  framePtr = F;
    F.line = 211;
    (uri_11045147.scheme == null ? uri_11045147.scheme = mnewString(0) : uri_11045147.scheme.length = 0);
    F.line = 211;
    (uri_11045147.username == null ? uri_11045147.username = mnewString(0) : uri_11045147.username.length = 0);
    F.line = 211;
    (uri_11045147.password == null ? uri_11045147.password = mnewString(0) : uri_11045147.password.length = 0);
    F.line = 211;
    (uri_11045147.hostname == null ? uri_11045147.hostname = mnewString(0) : uri_11045147.hostname.length = 0);
    F.line = 211;
    (uri_11045147.port == null ? uri_11045147.port = mnewString(0) : uri_11045147.port.length = 0);
    F.line = 211;
    (uri_11045147.path == null ? uri_11045147.path = mnewString(0) : uri_11045147.path.length = 0);
    F.line = 211;
    (uri_11045147.query == null ? uri_11045147.query = mnewString(0) : uri_11045147.query.length = 0);
    F.line = 211;
    (uri_11045147.anchor == null ? uri_11045147.anchor = mnewString(0) : uri_11045147.anchor.length = 0);
    F.line = 213;
    uri_11045147.opaque = false;
  framePtr = F.prev;

  
}
function parse_until_1335026(s_1335028, token_1335030, token_1335030_Idx, until_1335032, start_1335033) {
  var result_1335035 = 0;

  var F={procname:"parseutils.parseUntil",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 320;
    var i_1335036 = start_1335033;
    L1: do {
      F.line = 321;
        L2: while (true) {
        if (!((i_1335036 < (s_1335028 != null ? s_1335028.length : 0)) && !((until_1335032[s_1335028[chckIndx(i_1335036, 0, (s_1335028 != null ? s_1335028.length : 0)+0-1)-0]] != undefined)))) break L2;
          F.line = 321;
          i_1335036 = addInt(i_1335036, 1);
        }
    } while(false);
    F.line = 322;
    result_1335035 = subInt(i_1335036, start_1335033);
    F.line = 323;
    token_1335030[token_1335030_Idx] = nimCopy(null, substr_341022(s_1335028, start_1335033, subInt(i_1335036, 1)), NTI112);
  framePtr = F.prev;

  return result_1335035;

}
function nsuToLowerAsciiChar(c_9070023) {
  var result_9070024 = 0;

  var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if ((ConstSet4[c_9070023] != undefined)) {
    F.line = 209;
    result_9070024 = chckRange(addInt(c_9070023, 32), 0, 255);
    }
    else {
      F.line = 211;
      result_9070024 = c_9070023;
    }
    
  framePtr = F.prev;

  return result_9070024;

}
function nsuCmpIgnoreCase(a_9125016, b_9125017) {
  var result_9125018 = 0;

  var F={procname:"strutils.cmpIgnoreCase",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 315;
    var i_9125020 = 0;
    F.line = 316;
    var m_9125021 = nimMin((a_9125016 != null ? a_9125016.length : 0), (b_9125017 != null ? b_9125017.length : 0));
    L1: do {
      F.line = 317;
        L2: while (true) {
        if (!(i_9125020 < m_9125021)) break L2;
          F.line = 318;
          result_9125018 = subInt(nsuToLowerAsciiChar(a_9125016[chckIndx(i_9125020, 0, (a_9125016 != null ? a_9125016.length : 0)+0-1)-0]), nsuToLowerAsciiChar(b_9125017[chckIndx(i_9125020, 0, (b_9125017 != null ? b_9125017.length : 0)+0-1)-0]));
          if (!((result_9125018 == 0))) {
          F.line = 319;
          break BeforeRet;
          }
          
          F.line = 320;
          i_9125020 = addInt(i_9125020, 1);
        }
    } while(false);
    F.line = 321;
    result_9125018 = subInt((a_9125016 != null ? a_9125016.length : 0), (b_9125017 != null ? b_9125017.length : 0));
  } while (false);
  framePtr = F.prev;

  return result_9125018;

}
function parse_authority_11045014(authority_11045016, result_11045018) {
  var F={procname:"uri.parseAuthority",prev:framePtr,filename:"uri.nim",line:0};
  framePtr = F;
    F.line = 152;
    var i_11045020 = 0;
    F.line = 153;
    var in_port_11045021 = false;
    F.line = 154;
    var in_ipv6_11045022 = false;
    L1: do {
      F.line = 155;
        L2: while (true) {
        if (!(i_11045020 < (authority_11045016 != null ? authority_11045016.length : 0))) break L2;
          F.line = 156;
          switch (authority_11045016[chckIndx(i_11045020, 0, (authority_11045016 != null ? authority_11045016.length : 0)+0-1)-0]) {
          case 64:
            F.line = 158;
            var Tmp3 = result_11045018.password; result_11045018.password = result_11045018.port; result_11045018.port = Tmp3;            F.line = 159;
            (result_11045018.port == null ? result_11045018.port = mnewString(0) : result_11045018.port.length = 0);
            F.line = 160;
            var Tmp4 = result_11045018.username; result_11045018.username = result_11045018.hostname; result_11045018.hostname = Tmp4;            F.line = 161;
            (result_11045018.hostname == null ? result_11045018.hostname = mnewString(0) : result_11045018.hostname.length = 0);
            F.line = 162;
            in_port_11045021 = false;
            break;
          case 58:
            if (in_ipv6_11045022) {
            F.line = 165;
            if (result_11045018.hostname != null) { addChar(result_11045018.hostname, authority_11045016[chckIndx(i_11045020, 0, (authority_11045016 != null ? authority_11045016.length : 0)+0-1)-0]); } else { result_11045018.hostname = [authority_11045016[chckIndx(i_11045020, 0, (authority_11045016 != null ? authority_11045016.length : 0)+0-1)-0]]; };
            }
            else {
              F.line = 167;
              in_port_11045021 = true;
            }
            
            break;
          case 91:
            F.line = 169;
            in_ipv6_11045022 = true;
            break;
          case 93:
            F.line = 171;
            in_ipv6_11045022 = false;
            break;
          default: 
            if (in_port_11045021) {
            F.line = 174;
            if (result_11045018.port != null) { addChar(result_11045018.port, authority_11045016[chckIndx(i_11045020, 0, (authority_11045016 != null ? authority_11045016.length : 0)+0-1)-0]); } else { result_11045018.port = [authority_11045016[chckIndx(i_11045020, 0, (authority_11045016 != null ? authority_11045016.length : 0)+0-1)-0]]; };
            }
            else {
              F.line = 176;
            if (result_11045018.hostname != null) { addChar(result_11045018.hostname, authority_11045016[chckIndx(i_11045020, 0, (authority_11045016 != null ? authority_11045016.length : 0)+0-1)-0]); } else { result_11045018.hostname = [authority_11045016[chckIndx(i_11045020, 0, (authority_11045016 != null ? authority_11045016.length : 0)+0-1)-0]]; };
            }
            
            break;
          }
          F.line = 177;
          i_11045020 = addInt(i_11045020, 1);
        }
    } while(false);
  framePtr = F.prev;

  
}
function parse_path_11045056(uri_11045058, i_11045060, i_11045060_Idx, result_11045062) {
      var Tmp1;
      var Tmp2;

  var F={procname:"uri.parsePath",prev:framePtr,filename:"uri.nim",line:0};
  framePtr = F;
    F.line = 181;
    i_11045060[i_11045060_Idx] = addInt(i_11045060[i_11045060_Idx], parse_until_1335026(uri_11045058, result_11045062, "path", ConstSet3, i_11045060[i_11045060_Idx]));
    if ((nsuCmpIgnoreCase(result_11045062.scheme, makeNimstrLit("mailto")) == 0)) {
    F.line = 185;
    parse_authority_11045014(result_11045062.path, result_11045062);
    F.line = 186;
    (result_11045062.path == null ? result_11045062.path = mnewString(0) : result_11045062.path.length = 0);
    }
    
      if (!(i_11045060[i_11045060_Idx] < (uri_11045058 != null ? uri_11045058.length : 0))) Tmp1 = false; else {        Tmp1 = (uri_11045058[chckIndx(i_11045060[i_11045060_Idx], 0, (uri_11045058 != null ? uri_11045058.length : 0)+0-1)-0] == 63);      }    if (Tmp1) {
    F.line = 189;
    i_11045060[i_11045060_Idx] = addInt(i_11045060[i_11045060_Idx], 1);
    F.line = 190;
    i_11045060[i_11045060_Idx] = addInt(i_11045060[i_11045060_Idx], parse_until_1335026(uri_11045058, result_11045062, "query", ConstSet5, i_11045060[i_11045060_Idx]));
    }
    
      if (!(i_11045060[i_11045060_Idx] < (uri_11045058 != null ? uri_11045058.length : 0))) Tmp2 = false; else {        Tmp2 = (uri_11045058[chckIndx(i_11045060[i_11045060_Idx], 0, (uri_11045058 != null ? uri_11045058.length : 0)+0-1)-0] == 35);      }    if (Tmp2) {
    F.line = 193;
    i_11045060[i_11045060_Idx] = addInt(i_11045060[i_11045060_Idx], 1);
    F.line = 194;
    i_11045060[i_11045060_Idx] = addInt(i_11045060[i_11045060_Idx], parse_until_1335026(uri_11045058, result_11045062, "anchor", ConstSet6, i_11045060[i_11045060_Idx]));
    }
    
  framePtr = F.prev;

  
}
function parse_while_1355020(s_1355022, token_1355024, token_1355024_Idx, valid_chars_1355026, start_1355027) {
  var result_1355029 = 0;

  var F={procname:"parseutils.parseWhile",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 380;
    var i_1355030 = start_1355027;
    L1: do {
      F.line = 381;
        L2: while (true) {
        if (!((i_1355030 < (s_1355022 != null ? s_1355022.length : 0)) && (valid_chars_1355026[s_1355022[chckIndx(i_1355030, 0, (s_1355022 != null ? s_1355022.length : 0)+0-1)-0]] != undefined))) break L2;
          F.line = 381;
          i_1355030 = addInt(i_1355030, 1);
        }
    } while(false);
    F.line = 382;
    result_1355029 = subInt(i_1355030, start_1355027);
    F.line = 383;
    token_1355024[token_1355024_Idx] = nimCopy(null, substr_341022(s_1355022, start_1355027, subInt(i_1355030, 1)), NTI112);
  framePtr = F.prev;

  return result_1355029;

}
function parse_uri_11046814(uri_11046816, result_11046818) {
    var Tmp1;
      var Tmp2;
      var Tmp3;

  var F={procname:"uri.parseUri",prev:framePtr,filename:"uri.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 227;
    reset_uri_11045144(result_11046818);
    F.line = 229;
    var i_11046820 = [0];
    F.line = 232;
    if (!(1 < (uri_11046816 != null ? uri_11046816.length : 0))) Tmp1 = false; else {      Tmp1 = (uri_11046816[chckIndx(1, 0, (uri_11046816 != null ? uri_11046816.length : 0)+0-1)-0] == 47);    }    var double_slash_11050001 = Tmp1;
    if (((i_11046820[0] < (uri_11046816 != null ? uri_11046816.length : 0)) && (uri_11046816[chckIndx(i_11046820[0], 0, (uri_11046816 != null ? uri_11046816.length : 0)+0-1)-0] == 47))) {
    if (!(double_slash_11050001)) {
    F.line = 236;
    parse_path_11045056(uri_11046816, i_11046820, 0, result_11046818);
    F.line = 237;
    break BeforeRet;
    }
    
    }
    
    F.line = 240;
    i_11046820[0] = addInt(i_11046820[0], parse_while_1355020(uri_11046816, result_11046818, "scheme", ConstSet7, i_11046820[0]));
      if (((uri_11046816 != null ? uri_11046816.length : 0) <= i_11046820[0])) Tmp3 = true; else {        Tmp3 = !((uri_11046816[chckIndx(i_11046820[0], 0, (uri_11046816 != null ? uri_11046816.length : 0)+0-1)-0] == 58));      }      if (!Tmp3) Tmp2 = false; else {        Tmp2 = !(double_slash_11050001);      }    if (Tmp2) {
    F.line = 243;
    i_11046820[0] = 0;
    F.line = 244;
    (result_11046818.scheme == null ? result_11046818.scheme = mnewString(0) : result_11046818.scheme.length = 0);
    F.line = 245;
    parse_path_11045056(uri_11046816, i_11046820, 0, result_11046818);
    F.line = 246;
    break BeforeRet;
    }
    
    if (!(double_slash_11050001)) {
    F.line = 248;
    i_11046820[0] = addInt(i_11046820[0], 1);
    }
    
    if ((((addInt(i_11046820[0], 1) < (uri_11046816 != null ? uri_11046816.length : 0)) && (uri_11046816[chckIndx(i_11046820[0], 0, (uri_11046816 != null ? uri_11046816.length : 0)+0-1)-0] == 47)) && (uri_11046816[chckIndx(addInt(i_11046820[0], 1), 0, (uri_11046816 != null ? uri_11046816.length : 0)+0-1)-0] == 47))) {
    F.line = 252;
    i_11046820[0] = addInt(i_11046820[0], 2);
    F.line = 253;
    var authority_11060014 = [[]];
    F.line = 254;
    i_11046820[0] = addInt(i_11046820[0], parse_until_1335026(uri_11046816, authority_11060014, 0, ConstSet8, i_11046820[0]));
    if ((0 < (authority_11060014[0] != null ? authority_11060014[0].length : 0))) {
    F.line = 256;
    parse_authority_11045014(authority_11060014[0], result_11046818);
    }
    
    }
    else {
      F.line = 258;
      result_11046818.opaque = true;
    }
    
    F.line = 261;
    parse_path_11045056(uri_11046816, i_11046820, 0, result_11046818);
  } while (false);
  framePtr = F.prev;

  
}
function parse_uri_11065015(uri_11065017) {
  var result_11065018 = [{scheme: null, username: null, password: null, hostname: null, port: null, path: null, query: null, anchor: null, opaque: false}];

  var F={procname:"uri.parseUri",prev:framePtr,filename:"uri.nim",line:0};
  framePtr = F;
    F.line = 273;
    nimCopy(result_11065018[0], init_uri_11045113(), NTI11026046);
    F.line = 274;
    parse_uri_11046814(uri_11065017, result_11065018[0]);
  framePtr = F.prev;

  return result_11065018[0];

}
function sys_fatal_102618(message_102622) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 49;
    raiseException({message: nimCopy(null, message_102622, NTI112), m_type: NTI6241, parent: null, name: null, trace: null, up: null}, "AssertionError");
  framePtr = F.prev;

  
}
function raise_assert_102614(msg_102616) {
  var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 22;
    sys_fatal_102618(msg_102616);
  framePtr = F.prev;

  
}
function failed_assert_impl_102680(msg_102682) {
  var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 29;
    raise_assert_102614(msg_102682);
  framePtr = F.prev;

  
}
function substr_eq_9150026(s_9150028, pos_9150029, substr_9150030) {
  var result_9150031 = false;

  var F={procname:"strutils.substrEq",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 365;
    var i_9150033 = 0;
    F.line = 366;
    var length_9150034 = (substr_9150030 != null ? substr_9150030.length : 0);
    L1: do {
      F.line = 367;
        L2: while (true) {
        if (!(((i_9150033 < length_9150034) && (addInt(pos_9150029, i_9150033) < (s_9150028 != null ? s_9150028.length : 0))) && (s_9150028[chckIndx(addInt(pos_9150029, i_9150033), 0, (s_9150028 != null ? s_9150028.length : 0)+0-1)-0] == substr_9150030[chckIndx(i_9150033, 0, (substr_9150030 != null ? substr_9150030.length : 0)+0-1)-0]))) break L2;
          F.line = 368;
          i_9150033 = addInt(i_9150033, 1);
        }
    } while(false);
    F.line = 369;
    result_9150031 = (i_9150033 == length_9150034);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9150031;

}
function nsuSplitString(s_9325039, sep_9325040, maxsplit_9325041) {
  var result_9325043 = null;

  var F={procname:"strutils.split",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if (!((0 < (sep_9325040 != null ? sep_9325040.length : 0)))) {
    F.line = 756;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/strutils.nim(756, 11) `sep.len > 0` "));
    }
    
    F.line = 410;
    result_9325043 = nimCopy(null, [], NTI9345015);
    L1: do {
      F.line = 411;
      var xHEX60gensym9340201_9345016 = null;
      F.line = 382;
      var lastHEX60gensym9185043_11840104 = 0;
      F.line = 383;
      var splitsHEX60gensym9185044_11840105 = maxsplit_9325041;
      L2: do {
        F.line = 516;
          L3: while (true) {
          if (!(lastHEX60gensym9185043_11840104 <= (s_9325039 != null ? s_9325039.length : 0))) break L3;
            F.line = 386;
            var firstHEX60gensym9185045_11840107 = lastHEX60gensym9185043_11840104;
            L4: do {
              F.line = 387;
                L5: while (true) {
                if (!((lastHEX60gensym9185043_11840104 < (s_9325039 != null ? s_9325039.length : 0)) && !(substr_eq_9150026(s_9325039, lastHEX60gensym9185043_11840104, sep_9325040)))) break L5;
                  F.line = 388;
                  lastHEX60gensym9185043_11840104 = addInt(lastHEX60gensym9185043_11840104, 1);
                }
            } while(false);
            if ((splitsHEX60gensym9185044_11840105 == 0)) {
            F.line = 389;
            lastHEX60gensym9185043_11840104 = (s_9325039 != null ? s_9325039.length : 0);
            }
            
            F.line = 758;
            xHEX60gensym9340201_9345016 = substr_341022(s_9325039, firstHEX60gensym9185045_11840107, subInt(lastHEX60gensym9185043_11840104, 1));
            F.line = 411;
            var Tmp6 = nimCopy(null, xHEX60gensym9340201_9345016, NTI112);
            if (result_9325043 != null) { result_9325043.push(Tmp6); } else { result_9325043 = [Tmp6]; };
            if ((splitsHEX60gensym9185044_11840105 == 0)) {
            F.line = 391;
            break L2;
            }
            
            F.line = 392;
            splitsHEX60gensym9185044_11840105 = subInt(splitsHEX60gensym9185044_11840105, 1);
            F.line = 393;
            lastHEX60gensym9185043_11840104 = addInt(lastHEX60gensym9185043_11840104, (sep_9325040 != null ? sep_9325040.length : 0));
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9325043;

}
function new_seq_11201062(len_11201065) {
  var result_11201067 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_11201067 = new Array(len_11201065); for (var i=0;i<len_11201065;++i) {result_11201067[i]=null;}  framePtr = F.prev;

  return result_11201067;

}
function parse_uri3_11201041(url_11201043) {
  var result_11201044 = null;

  var F={procname:"uri3.parseUri3",prev:framePtr,filename:"uri3.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 140;
    var u_11201045 = parse_uri_11065015(url_11201043);
    F.line = 142;
    var queries_11201047 = nsuSplitString(u_11201045.query, makeNimstrLit("&"), -1);
    F.line = 143;
    var queries2_11201108 = new_seq_11201062(chckRange((queries_11201047 != null ? queries_11201047.length : 0), 0, 2147483647));
    L1: do {
      F.line = 144;
      var i_11201123 = 0;
      F.line = 66;
      var colontmp__11840089 = 0;
      F.line = 144;
      colontmp__11840089 = (queries_11201047 != null ? (queries_11201047.length-1) : -1);
      F.line = 77;
      var res_11840090 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_11840090 <= colontmp__11840089)) break L3;
            F.line = 144;
            i_11201123 = res_11840090;
            F.line = 145;
            queries2_11201108[chckIndx(i_11201123, 0, (queries2_11201108 != null ? queries2_11201108.length : 0)+0-1)-0] = nimCopy(null, nsuSplitString(queries_11201047[chckIndx(i_11201123, 0, (queries_11201047 != null ? queries_11201047.length : 0)+0-1)-0], makeNimstrLit("="), -1), NTI9325042);
            F.line = 80;
            res_11840090 = addInt(res_11840090, 1);
          }
      } while(false);
    } while(false);
    F.line = 147;
    var newuri_11201124 = {scheme: nimCopy(null, u_11201045.scheme, NTI112), username: nimCopy(null, u_11201045.username, NTI112), password: nimCopy(null, u_11201045.password, NTI112), hostname: nimCopy(null, u_11201045.hostname, NTI112), port: nimCopy(null, u_11201045.port, NTI112), path: nimCopy(null, u_11201045.path, NTI112), anchor: nimCopy(null, u_11201045.anchor, NTI112), queries: nimCopy(null, queries2_11201108, NTI11201048)};
    F.line = 157;
    result_11201044 = newuri_11201124;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11201044;

}
function len_10625128(t_10625133) {
  var result_10625134 = 0;

  var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1467;
    result_10625134 = t_10625133.counter;
  framePtr = F.prev;

  return result_10625134;

}
function len_10655341(n_10655343) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_10655344 = 0;

  var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 456;
    switch (n_10655343.kind) {
    case 6:
      F.line = 457;
      var Tmp1 = n_10655343;
      if (ConstSet9[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      result_10655344 = ((Tmp2 = Tmp1.elems, Tmp2) != null ? Tmp2.length : 0);
      break;
    case 5:
      F.line = 458;
      var Tmp3 = n_10655343;
      if (ConstSet10[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      result_10655344 = len_10625128(Tmp3.fields);
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  return result_10655344;

}
function is_filled_1009018(hcode_1009020) {
  var result_1009021 = false;

  var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_1009021 = !((hcode_1009020 == 0));
  framePtr = F.prev;

  return result_1009021;

}
function nsuToHex(x_9400243, len_9400244) {
  var result_9400245 = null;

  var F={procname:"strutils.toHex",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 936;
    var n_9400247 = x_9400243;
    F.line = 937;
    result_9400245 = nimCopy(null, mnewString(len_9400244), NTI112);
    L1: do {
      F.line = 938;
      var j_9400254 = 0;
      F.line = 6;
      var colontmp__11840131 = 0;
      F.line = 938;
      colontmp__11840131 = subInt(len_9400244, 1);
      F.line = 28;
      var res_11840132 = colontmp__11840131;
      L2: do {
        F.line = 29;
          L3: while (true) {
          if (!(0 <= res_11840132)) break L3;
            F.line = 938;
            j_9400254 = res_11840132;
            F.line = 939;
            result_9400245[chckIndx(j_9400254, 0, (result_9400245 != null ? result_9400245.length : 0)+0-1)-0] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_9400247 & 15), 0, (makeNimstrLit("0123456789ABCDEF") != null ? makeNimstrLit("0123456789ABCDEF").length : 0)+0-1)-0];
            F.line = 940;
            n_9400247 = (n_9400247 >> 4);
            if (((n_9400247 == 0) && (x_9400243 < 0))) {
            F.line = 942;
            n_9400247 = -1;
            }
            
            F.line = 31;
            res_11840132 = subInt(res_11840132, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9400245;

}
function escape_json_unquoted_10791679(s_10791681, result_10791683, result_10791683_Idx) {
  var F={procname:"json.escapeJsonUnquoted",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 585;
      var c_10791685 = 0;
      F.line = 202;
      var i_11840127 = 0;
      F.line = 203;
      var l_11840128 = (s_10791681 != null ? s_10791681.length : 0);
      L2: do {
        F.line = 204;
          L3: while (true) {
          if (!(i_11840127 < l_11840128)) break L3;
            F.line = 585;
            c_10791685 = s_10791681[chckIndx(i_11840127, 0, (s_10791681 != null ? s_10791681.length : 0)+0-1)-0];
            F.line = 586;
            switch (c_10791685) {
            case 10:
              F.line = 587;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\n")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\n"); };
              break;
            case 8:
              F.line = 588;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\b")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\b"); };
              break;
            case 12:
              F.line = 589;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\f")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\f"); };
              break;
            case 9:
              F.line = 590;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\t")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\t"); };
              break;
            case 11:
              F.line = 591;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\u000b")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\u000b"); };
              break;
            case 13:
              F.line = 592;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\r")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\r"); };
              break;
            case 34:
              F.line = 593;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\\"")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\\""); };
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              F.line = 594;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat((makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_10791685)+"") || [])); } else { result_10791683[result_10791683_Idx] = (makeNimstrLit("\\u000") || []).concat(cstrToNimstr((c_10791685)+"") || []).slice(); };
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              F.line = 595;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat((makeNimstrLit("\\u00") || []).concat(nsuToHex(c_10791685, 2) || [])); } else { result_10791683[result_10791683_Idx] = (makeNimstrLit("\\u00") || []).concat(nsuToHex(c_10791685, 2) || []).slice(); };
              break;
            case 92:
              F.line = 596;
              if (result_10791683[result_10791683_Idx] != null) { result_10791683[result_10791683_Idx] = (result_10791683[result_10791683_Idx]).concat(makeNimstrLit("\\\\")); } else { result_10791683[result_10791683_Idx] = makeNimstrLit("\\\\"); };
              break;
            default: 
              F.line = 597;
              if (result_10791683[result_10791683_Idx] != null) { addChar(result_10791683[result_10791683_Idx], c_10791685); } else { result_10791683[result_10791683_Idx] = [c_10791685]; };
              break;
            }
            F.line = 206;
            i_11840127 = addInt(i_11840127, 1);
            if (!(((s_10791681 != null ? s_10791681.length : 0) == l_11840128))) {
            F.line = 207;
            failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(207, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function escape_json_10791732(s_10791734, result_10791736, result_10791736_Idx) {
  var F={procname:"json.escapeJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 607;
    if (result_10791736[result_10791736_Idx] != null) { result_10791736[result_10791736_Idx] = (result_10791736[result_10791736_Idx]).concat(makeNimstrLit("\"")); } else { result_10791736[result_10791736_Idx] = makeNimstrLit("\""); };
    F.line = 608;
    escape_json_unquoted_10791679(s_10791734, result_10791736, result_10791736_Idx);
    F.line = 609;
    if (result_10791736[result_10791736_Idx] != null) { result_10791736[result_10791736_Idx] = (result_10791736[result_10791736_Idx]).concat(makeNimstrLit("\"")); } else { result_10791736[result_10791736_Idx] = makeNimstrLit("\""); };
  framePtr = F.prev;

  
}
function to_ugly_10810035(result_10810038, result_10810038_Idx, node_10810039) {
        var Tmp2;
        var Tmp6;
      var Tmp9;
      var Tmp10;
      var Tmp11;
      var Tmp12;
        var Tmp13;

  var F={procname:"json.toUgly",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 706;
    var comma_10810040 = false;
    F.line = 707;
    switch (node_10810039.kind) {
    case 6:
      F.line = 709;
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit("[")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit("["); };
      L1: do {
        F.line = 710;
        var child_10810048 = null;
        F.line = 182;
        var colontmp__11840114 = null;
        F.line = 710;
        var Tmp2 = node_10810039;
        if (ConstSet11[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        colontmp__11840114 = Tmp2.elems;
        F.line = 184;
        var i_11840116 = 0;
        F.line = 185;
        var l_11840117 = (colontmp__11840114 != null ? colontmp__11840114.length : 0);
        L3: do {
          F.line = 186;
            L4: while (true) {
            if (!(i_11840116 < l_11840117)) break L4;
              F.line = 710;
              child_10810048 = colontmp__11840114[chckIndx(i_11840116, 0, (colontmp__11840114 != null ? colontmp__11840114.length : 0)+0-1)-0];
              if (comma_10810040) {
              F.line = 711;
              if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit(",")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit(","); };
              }
              else {
                F.line = 712;
                comma_10810040 = true;
              }
              
              F.line = 713;
              to_ugly_10810035(result_10810038, result_10810038_Idx, child_10810048);
              F.line = 188;
              i_11840116 = addInt(i_11840116, 1);
              if (!(((colontmp__11840114 != null ? colontmp__11840114.length : 0) == l_11840117))) {
              F.line = 189;
              failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      F.line = 714;
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit("]")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit("]"); };
      break;
    case 5:
      F.line = 716;
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit("{")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit("{"); };
      L5: do {
        F.line = 717;
        var key_10810057 = null;
        F.line = 717;
        var value_10810058 = null;
        F.line = 1646;
        var colontmp__11840120 = {data: null, counter: 0, first: 0, last: 0};
        F.line = 717;
        var Tmp6 = node_10810039;
        if (ConstSet12[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
        nimCopy(colontmp__11840120, Tmp6.fields, NTI10446067);
        F.line = 1672;
        var l_11840122 = len_10625128(colontmp__11840120);
        if ((0 < colontmp__11840120.counter)) {
        F.line = 1251;
        var h_11840123 = colontmp__11840120.first;
        L7: do {
          F.line = 1252;
            L8: while (true) {
            if (!(0 <= h_11840123)) break L8;
              F.line = 1253;
              var nxt_11840125 = colontmp__11840120.data[chckIndx(h_11840123, 0, (colontmp__11840120.data != null ? colontmp__11840120.data.length : 0)+0-1)-0].Field1;
              if (is_filled_1009018(colontmp__11840120.data[chckIndx(h_11840123, 0, (colontmp__11840120.data != null ? colontmp__11840120.data.length : 0)+0-1)-0].Field0)) {
              F.line = 717;
              key_10810057 = colontmp__11840120.data[chckIndx(h_11840123, 0, (colontmp__11840120.data != null ? colontmp__11840120.data.length : 0)+0-1)-0].Field2;
              F.line = 1674;
              value_10810058 = colontmp__11840120.data[chckIndx(h_11840123, 0, (colontmp__11840120.data != null ? colontmp__11840120.data.length : 0)+0-1)-0].Field3;
              if (comma_10810040) {
              F.line = 718;
              if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit(",")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit(","); };
              }
              else {
                F.line = 719;
                comma_10810040 = true;
              }
              
              F.line = 720;
              escape_json_10791732(key_10810057, result_10810038, result_10810038_Idx);
              F.line = 721;
              if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit(":")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit(":"); };
              F.line = 722;
              to_ugly_10810035(result_10810038, result_10810038_Idx, value_10810058);
              if (!((len_10625128(colontmp__11840120) == l_11840122))) {
              F.line = 1675;
              failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 1256;
              h_11840123 = nxt_11840125;
            }
        } while(false);
        }
        
      } while(false);
      F.line = 723;
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit("}")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit("}"); };
      break;
    case 4:
      F.line = 725;
      var Tmp9 = node_10810039;
      if (ConstSet13[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      escape_json_10791732(Tmp9.str, result_10810038, result_10810038_Idx);
      break;
    case 2:
      F.line = 727;
      var Tmp10 = node_10810039;
      if (ConstSet14[Tmp10.kind]===undefined) { raiseFieldError(makeNimstrLit("\'num\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(cstrToNimstr((Tmp10.num)+"")); } else { result_10810038[result_10810038_Idx] = cstrToNimstr((Tmp10.num)+"").slice(); };
      break;
    case 3:
      F.line = 730;
      var Tmp11 = node_10810039;
      if (ConstSet15[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fnum\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(cstrToNimstr((Tmp11.fnum)+"")); } else { result_10810038[result_10810038_Idx] = cstrToNimstr((Tmp11.fnum)+"").slice(); };
      break;
    case 1:
      F.line = 733;
        var Tmp13 = node_10810039;
        if (ConstSet16[Tmp13.kind]===undefined) { raiseFieldError(makeNimstrLit("\'bval\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      if (Tmp13.bval) {
      Tmp12 = makeNimstrLit("true");
      }
      else {
      Tmp12 = makeNimstrLit("false");
      }
      
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(Tmp12); } else { result_10810038[result_10810038_Idx] = Tmp12.slice(); };
      break;
    case 0:
      F.line = 735;
      if (result_10810038[result_10810038_Idx] != null) { result_10810038[result_10810038_Idx] = (result_10810038[result_10810038_Idx]).concat(makeNimstrLit("null")); } else { result_10810038[result_10810038_Idx] = makeNimstrLit("null"); };
      break;
    }
  framePtr = F.prev;

  
}
function HEX24_10810416(node_10810418) {
  var result_10810419 = [null];

  var F={procname:"json.$",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 739;
    result_10810419[0] = nimCopy(null, mnewString(0), NTI112);
    F.line = 740;
    to_ugly_10810035(result_10810419, 0, node_10810418);
  framePtr = F.prev;

  return result_10810419[0];

}
function lv_action_11241074(p_11241076) {
  var F={procname:"liveview.lvAction",prev:framePtr,filename:"liveview.nim",line:0};
  framePtr = F;
    lv_instance_11241054().send((toJSStr(HEX24_10810416(p_11241076))));
  framePtr = F.prev;

  
}
function new_jarray_10465657() {
  var result_10465659 = null;

  var F={procname:"json.newJArray",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 214;
    result_10465659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};
  framePtr = F.prev;

  return result_10465659;

}
function is_power_of_two_960029(x_960031) {
    var Tmp1;

  var result_960032 = false;

  BeforeRet: do {
    if (!(0 < x_960031)) Tmp1 = false; else {      Tmp1 = ((x_960031 & (x_960031 - 1)) == 0);    }    result_960032 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_960032;

}
function init_ordered_table_10446240(initial_size_10446244) {
  var result_10446246 = {data: null, counter: 0, first: 0, last: 0};

  var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_960029(initial_size_10446244))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 128;
    result_10446246.counter = 0;
    F.line = 129;
    result_10446246.data = new Array(chckRange(initial_size_10446244, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_10446244, 0, 2147483647);++i) {result_10446246.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 131;
    result_10446246.first = -1;
    F.line = 132;
    result_10446246.last = -1;
  framePtr = F.prev;

  return result_10446246;

}
function new_jobject_10446235() {
  var result_10446237 = null;

  var F={procname:"json.newJObject",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 210;
    result_10446237 = {kind: 5, fields: init_ordered_table_10446240(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
  framePtr = F.prev;

  return result_10446237;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6235, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function imul_860517(a_860519, b_860520) {
  var result_860521 = 0;

  var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 133;
    var mask_860522 = 65535;
    F.line = 135;
    var a_hi_860531 = (((a_860519 >>> 0) >>> 16) & mask_860522);
    F.line = 136;
    var a_lo_860532 = (a_860519 & mask_860522);
    F.line = 137;
    var b_hi_860541 = (((b_860520 >>> 0) >>> 16) & mask_860522);
    F.line = 138;
    var b_lo_860542 = (b_860520 & mask_860522);
    F.line = 139;
    result_860521 = ((((a_lo_860532 * b_lo_860542) >>> 0) + (((((a_hi_860531 * b_lo_860542) >>> 0) + ((a_lo_860532 * b_hi_860541) >>> 0)) >>> 0) << 16)) >>> 0);
  framePtr = F.prev;

  return result_860521;

}
function rotl32_860601(x_860603, r_860604) {
  var result_860605 = 0;

  var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 144;
    result_860605 = ((x_860603 << r_860604) | ((x_860603 >>> 0) >>> subInt(32, r_860604)));
  framePtr = F.prev;

  return result_860605;

}
function murmur_hash_860629(x_860632) {
  var result_860633 = 0;

  var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 155;
    var size_860643 = (x_860632 != null ? x_860632.length : 0);
    F.line = 156;
    var step_size_860645 = 4;
    F.line = 157;
    var n_860646 = divInt(size_860643, step_size_860645);
    F.line = 159;
    var h1_860647 = 0;
    F.line = 160;
    var i_860649 = 0;
    L1: do {
      F.line = 163;
        L2: while (true) {
        if (!(i_860649 < mulInt(n_860646, step_size_860645))) break L2;
          F.line = 164;
          var k1_860650 = 0;
          F.line = 166;
          var j_860651 = step_size_860645;
          L3: do {
            F.line = 167;
              L4: while (true) {
              if (!(0 < j_860651)) break L4;
                F.line = 168;
                j_860651 = subInt(j_860651, 1);
                F.line = 169;
                k1_860650 = ((k1_860650 << 8) | x_860632[chckIndx(addInt(i_860649, j_860651), 0, (x_860632 != null ? x_860632.length : 0)+0-1)-0]);
              }
          } while(false);
          F.line = 172;
          i_860649 = addInt(i_860649, step_size_860645);
          F.line = 174;
          k1_860650 = imul_860517(k1_860650, 3432918353);
          F.line = 175;
          k1_860650 = rotl32_860601(k1_860650, 15);
          F.line = 176;
          k1_860650 = imul_860517(k1_860650, 461845907);
          F.line = 178;
          h1_860647 = (h1_860647 ^ k1_860650);
          F.line = 179;
          h1_860647 = rotl32_860601(h1_860647, 13);
          F.line = 180;
          h1_860647 = ((((h1_860647 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    F.line = 183;
    var k1_865208 = 0;
    F.line = 184;
    var rem_865209 = modInt(size_860643, step_size_860645);
    L5: do {
      F.line = 185;
        L6: while (true) {
        if (!(0 < rem_865209)) break L6;
          F.line = 186;
          rem_865209 = subInt(rem_865209, 1);
          F.line = 187;
          k1_865208 = ((k1_865208 << 8) | x_860632[chckIndx(addInt(i_860649, rem_865209), 0, (x_860632 != null ? x_860632.length : 0)+0-1)-0]);
        }
    } while(false);
    F.line = 188;
    k1_865208 = imul_860517(k1_865208, 3432918353);
    F.line = 189;
    k1_865208 = rotl32_860601(k1_865208, 15);
    F.line = 190;
    k1_865208 = imul_860517(k1_865208, 461845907);
    F.line = 191;
    h1_860647 = (h1_860647 ^ k1_865208);
    F.line = 194;
    h1_860647 = (h1_860647 ^ size_860643);
    F.line = 195;
    h1_860647 = (h1_860647 ^ ((h1_860647 >>> 0) >>> 16));
    F.line = 196;
    h1_860647 = imul_860517(h1_860647, 2246822507);
    F.line = 197;
    h1_860647 = (h1_860647 ^ ((h1_860647 >>> 0) >>> 13));
    F.line = 198;
    h1_860647 = imul_860517(h1_860647, 3266489909);
    F.line = 199;
    h1_860647 = (h1_860647 ^ ((h1_860647 >>> 0) >>> 16));
    F.line = 200;
    result_860633 = (h1_860647|0);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_860633;

}
function hash_900214(x_900216) {
  var result_900217 = 0;

  var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 229;
    result_900217 = murmur_hash_860629((x_900216.slice(0, (x_900216 != null ? (x_900216.length-1) : -1)+1)));
  framePtr = F.prev;

  return result_900217;

}
function next_try_1010014(h_1010016, max_hash_1010017) {
  var result_1010018 = 0;

  var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 30;
    result_1010018 = (addInt(h_1010016, 1) & max_hash_1010017);
  framePtr = F.prev;

  return result_1010018;

}
function raw_get_10540621(t_10540626, key_10540627, hc_10540628, hc_10540628_Idx) {
            var Tmp3;

  var result_10540629 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_10540628[hc_10540628_Idx] = hash_900214(key_10540627);
    if ((hc_10540628[hc_10540628_Idx] == 0)) {
    F.line = 65;
    hc_10540628[hc_10540628_Idx] = 314159265;
    }
    
    if (((t_10540626.data != null ? t_10540626.data.length : 0) == 0)) {
    F.line = 47;
    result_10540629 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_10550138 = (hc_10540628[hc_10540628_Idx] & (t_10540626.data != null ? (t_10540626.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_1009018(t_10540626.data[chckIndx(h_10550138, 0, (t_10540626.data != null ? t_10540626.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_10540626.data[chckIndx(h_10550138, 0, (t_10540626.data != null ? t_10540626.data.length : 0)+0-1)-0].Field0 == hc_10540628[hc_10540628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_10540626.data[chckIndx(h_10550138, 0, (t_10540626.data != null ? t_10540626.data.length : 0)+0-1)-0].Field2, key_10540627);            }          if (Tmp3) {
          F.line = 55;
          result_10540629 = h_10550138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_10550138 = next_try_1010014(h_10550138, (t_10540626.data != null ? (t_10540626.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_10540629 = subInt(-1, h_10550138);
  } while (false);
  framePtr = F.prev;

  return result_10540629;

}
function must_rehash_10575601(t_10575604) {
  var result_10575605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_10575604.counter < (t_10575604.data != null ? t_10575604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_10575605 = ((mulInt((t_10575604.data != null ? t_10575604.data.length : 0), 2) < mulInt(t_10575604.counter, 3)) || (subInt((t_10575604.data != null ? t_10575604.data.length : 0), t_10575604.counter) < 4));
  framePtr = F.prev;

  return result_10575605;

}
function raw_insert_10601349(t_10601355, data_10601358, data_10601358_Idx, key_10601359, val_10601360, hc_10601361, h_10601362) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_10601358[data_10601358_Idx][chckIndx(h_10601362, 0, (data_10601358[data_10601358_Idx] != null ? data_10601358[data_10601358_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_10601359, NTI112);
    F.line = 23;
    data_10601358[data_10601358_Idx][chckIndx(h_10601362, 0, (data_10601358[data_10601358_Idx] != null ? data_10601358[data_10601358_Idx].length : 0)+0-1)-0].Field3 = val_10601360;
    F.line = 24;
    data_10601358[data_10601358_Idx][chckIndx(h_10601362, 0, (data_10601358[data_10601358_Idx] != null ? data_10601358[data_10601358_Idx].length : 0)+0-1)-0].Field0 = hc_10601361;
    F.line = 1227;
    data_10601358[data_10601358_Idx][chckIndx(h_10601362, 0, (data_10601358[data_10601358_Idx] != null ? data_10601358[data_10601358_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_10601355.first < 0)) {
    F.line = 1228;
    t_10601355.first = h_10601362;
    }
    
    if ((0 <= t_10601355.last)) {
    F.line = 1229;
    data_10601358[data_10601358_Idx][chckIndx(t_10601355.last, 0, (data_10601358[data_10601358_Idx] != null ? data_10601358[data_10601358_Idx].length : 0)+0-1)-0].Field1 = h_10601362;
    }
    
    F.line = 1230;
    t_10601355.last = h_10601362;
  framePtr = F.prev;

  
}
function enlarge_10600180(t_10600186) {
          var Tmp6;
          var Tmp7;

  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1233;
    var n_10600194 = null;
    F.line = 1234;
    n_10600194 = new Array(chckRange(mulInt((t_10600186.data != null ? t_10600186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_10600186.data != null ? t_10600186.data.length : 0), 2), 0, 2147483647);++i) {n_10600194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 1235;
    var h_10600333 = t_10600186.first;
    F.line = 1236;
    t_10600186.first = -1;
    F.line = 1237;
    t_10600186.last = -1;
    F.line = 1238;
    var Tmp1 = t_10600186.data; t_10600186.data = n_10600194; n_10600194 = Tmp1;    L2: do {
      F.line = 1239;
        L3: while (true) {
        if (!(0 <= h_10600333)) break L3;
          F.line = 1240;
          var nxt_10600489 = n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field1;
          F.line = 1241;
          var eh_10600638 = n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field0;
          if (is_filled_1009018(eh_10600638)) {
          F.line = 1243;
          var j_10600645 = (eh_10600638 & (t_10600186.data != null ? (t_10600186.data.length-1) : -1));
          L4: do {
            F.line = 1244;
              L5: while (true) {
              if (!is_filled_1009018(t_10600186.data[chckIndx(j_10600645, 0, (t_10600186.data != null ? t_10600186.data.length : 0)+0-1)-0].Field0)) break L5;
                F.line = 1245;
                j_10600645 = next_try_1010014(j_10600645, (t_10600186.data != null ? (t_10600186.data.length-1) : -1));
              }
          } while(false);
          F.line = 1246;
          Tmp6 = n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field2;
          n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field2 = genericReset(n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field2, NTI112);
          Tmp7 = n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field3;
          n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field3 = genericReset(n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field3, NTI10446043);
          raw_insert_10601349(t_10600186, t_10600186, "data", Tmp6, Tmp7, n_10600194[chckIndx(h_10600333, 0, (n_10600194 != null ? n_10600194.length : 0)+0-1)-0].Field0, j_10600645);
          }
          
          F.line = 1247;
          h_10600333 = nxt_10600489;
        }
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_10602149(t_10602154, key_10602155, hc_10602156) {
  var result_10602157 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_10602154.data != null ? t_10602154.data.length : 0) == 0)) {
    F.line = 47;
    result_10602157 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_10605138 = (hc_10602156 & (t_10602154.data != null ? (t_10602154.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_1009018(t_10602154.data[chckIndx(h_10605138, 0, (t_10602154.data != null ? t_10602154.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_10602154.data[chckIndx(h_10605138, 0, (t_10602154.data != null ? t_10602154.data.length : 0)+0-1)-0].Field0 == hc_10602156) && eqStrings(t_10602154.data[chckIndx(h_10605138, 0, (t_10602154.data != null ? t_10602154.data.length : 0)+0-1)-0].Field2, key_10602155))) {
          F.line = 55;
          result_10602157 = h_10605138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_10605138 = next_try_1010014(h_10605138, (t_10602154.data != null ? (t_10602154.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_10602157 = subInt(-1, h_10605138);
  } while (false);
  framePtr = F.prev;

  return result_10602157;

}
function HEX5BHEX5DHEX3D_10515311(t_10515317, key_10515318, val_10515319) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_10515317.data != null ? t_10515317.data.length : 0) == 0)) {
    if (!(is_power_of_two_960029(64))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 128;
    t_10515317.counter = 0;
    F.line = 129;
    t_10515317.data = new Array(64); for (var i=0;i<64;++i) {t_10515317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    F.line = 131;
    t_10515317.first = -1;
    F.line = 132;
    t_10515317.last = -1;
    }
    
    F.line = 57;
    var hc_10540601 = [0];
    F.line = 58;
    var index_10550620 = raw_get_10540621(t_10515317, key_10515318, hc_10540601, 0);
    if ((0 <= index_10550620)) {
    F.line = 59;
    t_10515317.data[chckIndx(index_10550620, 0, (t_10515317.data != null ? t_10515317.data.length : 0)+0-1)-0].Field3 = val_10515319;
    }
    else {
      if (((t_10515317.data != null ? t_10515317.data.length : 0) == 0)) {
      if (!(is_power_of_two_960029(64))) {
      F.line = 127;
      failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 128;
      t_10515317.counter = 0;
      F.line = 129;
      t_10515317.data = new Array(64); for (var i=0;i<64;++i) {t_10515317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}      F.line = 131;
      t_10515317.first = -1;
      F.line = 132;
      t_10515317.last = -1;
      }
      
      if (must_rehash_10575601(t_10515317)) {
      F.line = 49;
      enlarge_10600180(t_10515317);
      F.line = 50;
      index_10550620 = raw_get_known_hc_10602149(t_10515317, key_10515318, hc_10540601[0]);
      }
      
      F.line = 51;
      index_10550620 = subInt(-1, index_10550620);
      F.line = 52;
      raw_insert_10601349(t_10515317, t_10515317, "data", key_10515318, val_10515319, hc_10540601[0], index_10550620);
      F.line = 60;
      t_10515317.counter = addInt(t_10515317.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function HEX25_10605802(key_vals_10605808) {
            var Tmp4;

  var result_10605809 = null;

  var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((key_vals_10605808 != null ? key_vals_10605808.length : 0) == 0)) {
    F.line = 310;
    result_10605809 = new_jarray_10465657();
    break BeforeRet;
    }
    
    F.line = 311;
    result_10605809 = new_jobject_10446235();
    L1: do {
      F.line = 312;
      var key_10605859 = null;
      F.line = 312;
      var val_10605860 = null;
      F.line = 3;
      var i_11840139 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_11840139 < (key_vals_10605808 != null ? key_vals_10605808.length : 0))) break L3;
            F.line = 312;
            key_10605859 = key_vals_10605808[chckIndx(i_11840139, 0, (key_vals_10605808 != null ? key_vals_10605808.length : 0)+0-1)-0]["Field0"];
            F.line = 5;
            val_10605860 = key_vals_10605808[chckIndx(i_11840139, 0, (key_vals_10605808 != null ? key_vals_10605808.length : 0)+0-1)-0]["Field1"];
            F.line = 312;
            var Tmp4 = result_10605809;
            if (ConstSet17[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
            HEX5BHEX5DHEX3D_10515311(Tmp4.fields, key_10605859, val_10605860);
            F.line = 6;
            i_11840139 = addInt(i_11840139, 1);
          }
      } while(false);
    } while(false);
  } while (false);
  framePtr = F.prev;

  return result_10605809;

}
function HEX25_10605683(s_10605685) {
  var result_10605686 = null;

  var F={procname:"json.%",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 282;
    result_10605686 = {kind: 4, str: nimCopy(null, s_10605685, NTI112), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
  framePtr = F.prev;

  return result_10605686;

}
function lv_visit_page_11265018(target_11265020, params_11265021) {
  var F={procname:"liveview.lvVisitPage",prev:framePtr,filename:"liveview.nim",line:0};
  framePtr = F;
    F.line = 21;
    var query_string_11265022 = get_query_string_11210230(parse_uri3_11201041(target_11265020));
    if (!(eqStrings(query_string_11265022, []))) {
    F.line = 23;
    window.location.hash = toJSStr((makeNimstrLit("#") || []).concat(query_string_11265022 || []));
    }
    
    F.line = 25;
    lv_action_11241074(HEX25_10605802([nimCopy(null, {Field0: makeNimstrLit("action"), Field1: HEX25_10605683(makeNimstrLit("visitPage"))}, NTI11275002), nimCopy(null, {Field0: makeNimstrLit("target"), Field1: HEX25_10605683(target_11265020)}, NTI11275002), nimCopy(null, {Field0: makeNimstrLit("params"), Field1: params_11265021}, NTI11275002)]));
    F.line = 27;
    last_visited_page_11241014[0] = nimCopy(null, target_11265020, NTI112);
  framePtr = F.prev;

  
}
function heartbeat_check_11676033(cb_11676037) {
  var F={procname:"radmngJs.heartbeatCheck",prev:framePtr,filename:"radmngJs.nim",line:0};
  framePtr = F;
    wnd_11676019.clearInterval((heartbeat_interval_11676014[0]));
    F.line = 112;
    heartbeat_interval_11676014[0] = wnd_11676019.setInterval((cb_11676037), (5000));
  framePtr = F.prev;

  
}
function get_var_type_10920050(x_10920052) {
  var result_10920053 = 0;

  var F={procname:"json.getVarType",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 860;
    result_10920053 = 0;
    F.line = 863;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_10920052)))) {
    case "[object Array]":
      F.line = 864;
      result_10920053 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      F.line = 865;
      result_10920053 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
      if ((x_10920052 % 1.0000000000000000e+00 == 0.0)) {
      F.line = 868;
      result_10920053 = 2;
      break BeforeRet;
      }
      else {
        F.line = 870;
        result_10920053 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      F.line = 871;
      result_10920053 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      F.line = 872;
      result_10920053 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      F.line = 873;
      result_10920053 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      F.line = 874;
      failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(874, 18) `false` "));
      }
      
      break;
    }
  } while (false);
  framePtr = F.prev;

  return result_10920053;

}
function len_10930214(x_10930216) {
  var result_10930217 = 0;

  var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((get_var_type_10920050(x_10930216) == 6))) {
    F.line = 877;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(877, 12) `x.getVarType == JArray` "));
    }
    
    F.line = 878;
          result_10930217 = x_10930216.length;
    
  framePtr = F.prev;

  return result_10930217;

}
function add_10495020(father_10495022, child_10495023) {
    var Tmp1;
    var Tmp2;

  var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((father_10495022.kind == 6))) {
    F.line = 272;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(272, 10) `father.kind == JArray` "));
    }
    
    F.line = 273;
    var Tmp1 = father_10495022;
    if (ConstSet18[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_10495023); } else { Tmp2 = [child_10495023]; };
  framePtr = F.prev;

  
}
function HEX5BHEX5D_10950214(x_10950216, y_10950217) {
  var result_10950218 = {};

  var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((get_var_type_10920050(x_10950216) == 6))) {
    F.line = 889;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(889, 12) `x.getVarType == JArray` "));
    }
    
    F.line = 890;
          result_10950218 = x_10950216[y_10950217];
    
  framePtr = F.prev;

  return result_10950218;

}
function HEX5BHEX5DHEX3D_10606214(obj_10606216, key_10606217, val_10606218) {
    var Tmp1;

  var F={procname:"json.[]=",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!((obj_10606216.kind == 5))) {
    F.line = 346;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(346, 9) `obj.kind == JObject` "));
    }
    
    F.line = 347;
    var Tmp1 = obj_10606216;
    if (ConstSet19[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    HEX5BHEX5DHEX3D_10515311(Tmp1.fields, key_10606217, val_10606218);
  framePtr = F.prev;

  
}
function new_jint_10446168(n_10446170) {
  var result_10446171 = null;

  var F={procname:"json.newJInt",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 194;
    result_10446171 = {kind: 2, num: n_10446170, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
  framePtr = F.prev;

  return result_10446171;

}
function new_jfloat_10446185(n_10446187) {
  var result_10446188 = null;

  var F={procname:"json.newJFloat",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 198;
    result_10446188 = {kind: 3, fnum: n_10446187, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
  framePtr = F.prev;

  return result_10446188;

}
function new_jstring_10446086(s_10446088) {
  var result_10446089 = null;

  var F={procname:"json.newJString",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 186;
    result_10446089 = {kind: 4, str: nimCopy(null, s_10446088, NTI112), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
  framePtr = F.prev;

  return result_10446089;

}
function new_jbool_10446202(b_10446204) {
  var result_10446205 = null;

  var F={procname:"json.newJBool",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 202;
    result_10446205 = {kind: 1, bval: b_10446204, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
  framePtr = F.prev;

  return result_10446205;

}
function new_jnull_10446219() {
  var result_10446221 = null;

  var F={procname:"json.newJNull",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 206;
    result_10446221 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
  framePtr = F.prev;

  return result_10446221;

}
function convert_object_10960214(x_10960216) {
  var result_10960217 = null;

  var F={procname:"json.convertObject",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 895;
    switch (get_var_type_10920050(x_10960216)) {
    case 6:
      F.line = 897;
      result_10960217 = new_jarray_10465657();
      L1: do {
        F.line = 898;
        var i_10960225 = 0;
        F.line = 104;
        var colontmp__11840155 = 0;
        F.line = 898;
        colontmp__11840155 = len_10930214(x_10960216);
        F.line = 106;
        var i_11840156 = 0;
        L2: do {
          F.line = 107;
            L3: while (true) {
            if (!(i_11840156 < colontmp__11840155)) break L3;
              F.line = 898;
              i_10960225 = i_11840156;
              F.line = 899;
              add_10495020(result_10960217, convert_object_10960214(HEX5BHEX5D_10950214(x_10960216, i_10960225)));
              F.line = 109;
              i_11840156 = addInt(i_11840156, 1);
            }
        } while(false);
      } while(false);
      break;
    case 5:
      F.line = 901;
      result_10960217 = new_jobject_10446235();
      F.line = 902;
      for (var property in x_10960216) {
        if (x_10960216.hasOwnProperty(property)) {
      
      F.line = 905;
      var nim_property_10960227 = null;
      F.line = 906;
      var nim_value_10960228 = {};
      F.line = 907;
      nim_property_10960227 = property; nim_value_10960228 = x_10960216[property];
      F.line = 908;
      HEX5BHEX5DHEX3D_10606214(result_10960217, cstrToNimstr(nim_property_10960227), convert_object_10960214(nim_value_10960228));
      F.line = 909;
      }}
      break;
    case 2:
      F.line = 911;
      result_10960217 = new_jint_10446168(x_10960216);
      break;
    case 3:
      F.line = 913;
      result_10960217 = new_jfloat_10446185(x_10960216);
      break;
    case 4:
      F.line = 915;
      result_10960217 = new_jstring_10446086(cstrToNimstr(x_10960216));
      break;
    case 1:
      F.line = 917;
      result_10960217 = new_jbool_10446202(x_10960216);
      break;
    case 0:
      F.line = 919;
      result_10960217 = new_jnull_10446219();
      break;
    }
  framePtr = F.prev;

  return result_10960217;

}
function parse_json_10960257(buffer_10960259) {
  var result_10960260 = null;

  var F={procname:"json.parseJson",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 925;
    result_10960260 = convert_object_10960214(JSON.parse(toJSStr(buffer_10960259)));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10960260;

}
function get_str_10465703(n_10465705, default_10465706) {
      var Tmp1;
      var Tmp2;

  var result_10465707 = null;

  var F={procname:"json.getStr",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
      if ((n_10465705 == null)) Tmp1 = true; else {        Tmp1 = !((n_10465705.kind == 4));      }    if (Tmp1) {
    F.line = 220;
    result_10465707 = nimCopy(null, default_10465706, NTI112);
    break BeforeRet;
    }
    else {
      F.line = 221;
      var Tmp2 = n_10465705;
      if (ConstSet20[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'str\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      result_10465707 = nimCopy(null, Tmp2.str, NTI112);
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_10465707;

}
function raw_get_10640157(t_10640161, key_10640162, hc_10640163, hc_10640163_Idx) {
            var Tmp3;

  var result_10640164 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_10640163[hc_10640163_Idx] = hash_900214(key_10640162);
    if ((hc_10640163[hc_10640163_Idx] == 0)) {
    F.line = 65;
    hc_10640163[hc_10640163_Idx] = 314159265;
    }
    
    if (((t_10640161.data != null ? t_10640161.data.length : 0) == 0)) {
    F.line = 47;
    result_10640164 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_10650138 = (hc_10640163[hc_10640163_Idx] & (t_10640161.data != null ? (t_10640161.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_1009018(t_10640161.data[chckIndx(h_10650138, 0, (t_10640161.data != null ? t_10640161.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_10640161.data[chckIndx(h_10650138, 0, (t_10640161.data != null ? t_10640161.data.length : 0)+0-1)-0].Field0 == hc_10640163[hc_10640163_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_10640161.data[chckIndx(h_10650138, 0, (t_10640161.data != null ? t_10640161.data.length : 0)+0-1)-0].Field2, key_10640162);            }          if (Tmp3) {
          F.line = 55;
          result_10640164 = h_10650138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_10650138 = next_try_1010014(h_10650138, (t_10640161.data != null ? (t_10640161.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_10640164 = subInt(-1, h_10650138);
  } while (false);
  framePtr = F.prev;

  return result_10640164;

}
function get_or_default_10745192(t_10745197, key_10745198) {
  var result_10745199 = null;

  var F={procname:"getOrDefault.getOrDefault",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 142;
    var hcHEX60gensym10745200_10750001 = [0];
    F.line = 143;
    var indexHEX60gensym10745201_10750010 = raw_get_10640157(t_10745197, key_10745198, hcHEX60gensym10745200_10750001, 0);
    if ((0 <= indexHEX60gensym10745201_10750010)) {
    F.line = 144;
    result_10745199 = t_10745197.data[chckIndx(indexHEX60gensym10745201_10750010, 0, (t_10745197.data != null ? t_10745197.data.length : 0)+0-1)-0].Field3;
    }
    
  framePtr = F.prev;

  return result_10745199;

}
function get_or_default_10765016(node_10765018, key_10765019) {
      var Tmp1;
    var Tmp2;

  var result_10765020 = null;

  var F={procname:"json.getOrDefault",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
      if (!!((node_10765018 == null))) Tmp1 = false; else {        Tmp1 = (node_10765018.kind == 5);      }    if (Tmp1) {
    F.line = 524;
    var Tmp2 = node_10765018;
    if (ConstSet21[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    result_10765020 = get_or_default_10745192(Tmp2.fields, key_10765019);
    }
    
  framePtr = F.prev;

  return result_10765020;

}
function HEX7BHEX7D_10765237(node_10765239, key_10765240) {
  var result_10765241 = null;

  var F={procname:"json.{}",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    F.line = 527;
    result_10765241 = get_or_default_10765016(node_10765239, key_10765240);
  framePtr = F.prev;

  return result_10765241;

}
function jq_1281087(selector_1281089) {
  var result_1281090 = null;

  var F={procname:"init.jq",prev:framePtr,filename:"init.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 33;
    result_1281090 = jqSelector(toJSStr(selector_1281089));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1281090;

}
function parse_saturated_natural_1395017(s_1395019, b_1395021, b_1395021_Idx, start_1395022) {
      var Tmp1;
          var Tmp4;

  var result_1395024 = 0;

  var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 476;
    var i_1395025 = start_1395022;
    if (((i_1395025 < (s_1395019 != null ? s_1395019.length : 0)) && (s_1395019[chckIndx(i_1395025, 0, (s_1395019 != null ? s_1395019.length : 0)+0-1)-0] == 43))) {
    F.line = 477;
    i_1395025 = addInt(i_1395025, 1);
    }
    
      if (!(i_1395025 < (s_1395019 != null ? s_1395019.length : 0))) Tmp1 = false; else {        Tmp1 = (ConstSet26[s_1395019[chckIndx(i_1395025, 0, (s_1395019 != null ? s_1395019.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 479;
    b_1395021[b_1395021_Idx] = 0;
    L2: do {
      F.line = 480;
        L3: while (true) {
          if (!(i_1395025 < (s_1395019 != null ? s_1395019.length : 0))) Tmp4 = false; else {            Tmp4 = (ConstSet27[s_1395019[chckIndx(i_1395025, 0, (s_1395019 != null ? s_1395019.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp4) break L3;
          F.line = 481;
          var c_1405016 = subInt(s_1395019[chckIndx(i_1395025, 0, (s_1395019 != null ? s_1395019.length : 0)+0-1)-0], 48);
          if ((b_1395021[b_1395021_Idx] <= divInt(subInt(2147483647, c_1405016), 10))) {
          F.line = 483;
          b_1395021[b_1395021_Idx] = addInt(mulInt(b_1395021[b_1395021_Idx], 10), c_1405016);
          }
          else {
            F.line = 485;
            b_1395021[b_1395021_Idx] = 2147483647;
          }
          
          F.line = 486;
          i_1395025 = addInt(i_1395025, 1);
          L5: do {
            F.line = 487;
              L6: while (true) {
              if (!((i_1395025 < (s_1395019 != null ? s_1395019.length : 0)) && (s_1395019[chckIndx(i_1395025, 0, (s_1395019 != null ? s_1395019.length : 0)+0-1)-0] == 95))) break L6;
                F.line = 487;
                i_1395025 = addInt(i_1395025, 1);
              }
          } while(false);
        }
    } while(false);
    F.line = 488;
    result_1395024 = subInt(i_1395025, start_1395022);
    }
    
  framePtr = F.prev;

  return result_1395024;

}
function HEX5BHEX5D_4805068(s_4805072, x_4805074) {
  var result_4805075 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2436;
    var a_4805201 = x_4805074.a;
    F.line = 2437;
    var l_4805401 = addInt(subInt(subInt((s_4805072 != null ? s_4805072.length : 0), x_4805074.b), a_4805201), 1);
    F.line = 2438;
    result_4805075 = nimCopy(null, mnewString(chckRange(l_4805401, 0, 2147483647)), NTI112);
    L1: do {
      F.line = 2439;
      var i_4805409 = 0;
      F.line = 106;
      var i_11840182 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_11840182 < l_4805401)) break L3;
            F.line = 2439;
            i_4805409 = i_11840182;
            F.line = 2439;
            result_4805075[chckIndx(i_4805409, 0, (result_4805075 != null ? result_4805075.length : 0)+0-1)-0] = s_4805072[chckIndx(addInt(i_4805409, a_4805201), 0, (s_4805072 != null ? s_4805072.length : 0)+0-1)-0];
            F.line = 109;
            i_11840182 = addInt(i_11840182, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_4805075;

}
function HEX2EHEX2E_4805001(a_4805006, b_4805008) {
  var result_4805014 = {a: 0, b: 0};

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_4805014, {a: a_4805006, b: b_4805008}, NTI4805011);
  framePtr = F.prev;

  return result_4805014;

}
function parse_standard_format_specifier_11300322(s_11300324, start_11300325, ignore_unknown_suffix_11300327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_11300328 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

  var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    F.line = 379;
    result_11300328.fill = 32;
    F.line = 380;
    result_11300328.align = 0;
    F.line = 381;
    result_11300328.sign = 45;
    F.line = 382;
    var i_11300331 = start_11300325;
    if (((addInt(i_11300331, 1) < (s_11300324 != null ? s_11300324.length : 0)) && (ConstSet22[s_11300324[chckIndx(addInt(i_11300331, 1), 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 384;
    result_11300328.fill = s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0];
    F.line = 385;
    result_11300328.align = s_11300324[chckIndx(addInt(i_11300331, 1), 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0];
    F.line = 386;
    i_11300331 = addInt(i_11300331, 2);
    }
    else {
    if (((i_11300331 < (s_11300324 != null ? s_11300324.length : 0)) && (ConstSet23[s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 388;
    result_11300328.align = s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0];
    F.line = 389;
    i_11300331 = addInt(i_11300331, 1);
    }
    }
    if (((i_11300331 < (s_11300324 != null ? s_11300324.length : 0)) && (ConstSet24[s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 392;
    result_11300328.sign = s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0];
    F.line = 393;
    i_11300331 = addInt(i_11300331, 1);
    }
    
    if (((i_11300331 < (s_11300324 != null ? s_11300324.length : 0)) && (s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0] == 35))) {
    F.line = 396;
    result_11300328.alternateForm = true;
    F.line = 397;
    i_11300331 = addInt(i_11300331, 1);
    }
    
      if (!((addInt(i_11300331, 1) < (s_11300324 != null ? s_11300324.length : 0)) && (s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet25[s_11300324[chckIndx(addInt(i_11300331, 1), 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 400;
    result_11300328.padWithZero = true;
    F.line = 401;
    i_11300331 = addInt(i_11300331, 1);
    }
    
    F.line = 403;
    var parsed_length_11320015 = parse_saturated_natural_1395017(s_11300324, result_11300328, "minimumWidth", i_11300331);
    F.line = 404;
    i_11300331 = addInt(i_11300331, parsed_length_11320015);
    if (((i_11300331 < (s_11300324 != null ? s_11300324.length : 0)) && (s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0] == 46))) {
    F.line = 406;
    i_11300331 = addInt(i_11300331, 1);
    F.line = 407;
    var parsed_length_b_11320029 = parse_saturated_natural_1395017(s_11300324, result_11300328, "precision", i_11300331);
    F.line = 408;
    i_11300331 = addInt(i_11300331, parsed_length_b_11320029);
    }
    else {
      F.line = 410;
      result_11300328.precision = -1;
    }
    
      if (!(i_11300331 < (s_11300324 != null ? s_11300324.length : 0))) Tmp2 = false; else {        Tmp2 = (ConstSet28[s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp2) {
    F.line = 413;
    result_11300328.typ = s_11300324[chckIndx(i_11300331, 0, (s_11300324 != null ? s_11300324.length : 0)+0-1)-0];
    F.line = 414;
    i_11300331 = addInt(i_11300331, 1);
    }
    
    F.line = 415;
    result_11300328.endPosition = i_11300331;
      if (!!((i_11300331 == (s_11300324 != null ? s_11300324.length : 0)))) Tmp3 = false; else {        Tmp3 = !(ignore_unknown_suffix_11300327);      }    if (Tmp3) {
    F.line = 417;
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_4805068(s_11300324, HEX2EHEX2E_4805001(i_11300331, 1)) || []), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_11300328;

}
function nucruneLen(s_1476829) {
  var result_1476830 = 0;

  var F={procname:"unicode.runeLen",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
    F.line = 41;
    var i_1476832 = 0;
    L1: do {
      F.line = 42;
        L2: while (true) {
        if (!(i_1476832 < (s_1476829 != null ? s_1476829.length : 0))) break L2;
          if ((s_1476829[chckIndx(i_1476832, 0, (s_1476829 != null ? s_1476829.length : 0)+0-1)-0] <= 127)) {
          F.line = 43;
          i_1476832 = addInt(i_1476832, 1);
          }
          else {
          if ((((s_1476829[chckIndx(i_1476832, 0, (s_1476829 != null ? s_1476829.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          F.line = 44;
          i_1476832 = addInt(i_1476832, 2);
          }
          else {
          if ((((s_1476829[chckIndx(i_1476832, 0, (s_1476829 != null ? s_1476829.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          F.line = 45;
          i_1476832 = addInt(i_1476832, 3);
          }
          else {
          if ((((s_1476829[chckIndx(i_1476832, 0, (s_1476829 != null ? s_1476829.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          F.line = 46;
          i_1476832 = addInt(i_1476832, 4);
          }
          else {
          if ((((s_1476829[chckIndx(i_1476832, 0, (s_1476829 != null ? s_1476829.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          F.line = 47;
          i_1476832 = addInt(i_1476832, 5);
          }
          else {
          if ((((s_1476829[chckIndx(i_1476832, 0, (s_1476829 != null ? s_1476829.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          F.line = 48;
          i_1476832 = addInt(i_1476832, 6);
          }
          else {
            F.line = 49;
          i_1476832 = addInt(i_1476832, 1);
          }
          }}}}}
          F.line = 50;
          result_1476830 = addInt(result_1476830, 1);
        }
    } while(false);
  framePtr = F.prev;

  return result_1476830;

}
function rune_len_at_1476931(s_1476933, i_1476934) {
  var result_1476935 = 0;

  var F={procname:"unicode.runeLenAt",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
    if ((s_1476933[chckIndx(i_1476934, 0, (s_1476933 != null ? s_1476933.length : 0)+0-1)-0] <= 127)) {
    F.line = 62;
    result_1476935 = 1;
    }
    else {
    if ((((s_1476933[chckIndx(i_1476934, 0, (s_1476933 != null ? s_1476933.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
    F.line = 63;
    result_1476935 = 2;
    }
    else {
    if ((((s_1476933[chckIndx(i_1476934, 0, (s_1476933 != null ? s_1476933.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
    F.line = 64;
    result_1476935 = 3;
    }
    else {
    if ((((s_1476933[chckIndx(i_1476934, 0, (s_1476933 != null ? s_1476933.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
    F.line = 65;
    result_1476935 = 4;
    }
    else {
    if ((((s_1476933[chckIndx(i_1476934, 0, (s_1476933 != null ? s_1476933.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
    F.line = 66;
    result_1476935 = 5;
    }
    else {
    if ((((s_1476933[chckIndx(i_1476934, 0, (s_1476933 != null ? s_1476933.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
    F.line = 67;
    result_1476935 = 6;
    }
    else {
      F.line = 68;
      result_1476935 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_1476935;

}
function rune_offset_2100244(s_2100246, pos_2100247, start_2100248) {
  var result_2100249 = 0;

  var F={procname:"unicode.runeOffset",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 319;
    var i_2100251 = 0;
    F.line = 320;
    var o_2100252 = start_2100248;
    L1: do {
      F.line = 321;
        L2: while (true) {
        if (!(i_2100251 < pos_2100247)) break L2;
          F.line = 322;
          o_2100252 = addInt(o_2100252, chckRange(rune_len_at_1476931(s_2100246, o_2100252), 0, 2147483647));
          if (((s_2100246 != null ? s_2100246.length : 0) <= o_2100252)) {
          F.line = 324;
          result_2100249 = -1;
          break BeforeRet;
          }
          
          F.line = 325;
          i_2100251 = addInt(i_2100251, 1);
        }
    } while(false);
    F.line = 326;
    result_2100249 = o_2100252;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_2100249;

}
function validate_utf8_1720229(s_1720231) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_1720232 = 0;

  var F={procname:"unicode.validateUtf8",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 172;
    var i_1720234 = 0;
    F.line = 173;
    var l_1720235 = (s_1720231 != null ? s_1720231.length : 0);
    L1: do {
      F.line = 174;
        L2: while (true) {
        if (!(i_1720234 < l_1720235)) break L2;
          if ((s_1720231[chckIndx(i_1720234, 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] <= 127)) {
          F.line = 176;
          i_1720234 = addInt(i_1720234, 1);
          }
          else {
          if ((((s_1720231[chckIndx(i_1720234, 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          if ((s_1720231[chckIndx(i_1720234, 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] < 194)) {
          F.line = 178;
          result_1720232 = i_1720234;
          break BeforeRet;
          }
          
            if (!(addInt(i_1720234, 1) < l_1720235)) Tmp3 = false; else {              Tmp3 = (((s_1720231[chckIndx(addInt(i_1720234, 1), 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          F.line = 179;
          i_1720234 = addInt(i_1720234, 2);
          }
          else {
            F.line = 180;
            result_1720232 = i_1720234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1720231[chckIndx(i_1720234, 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_1720234, 2) < l_1720235)) Tmp5 = false; else {              Tmp5 = (((s_1720231[chckIndx(addInt(i_1720234, 1), 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_1720231[chckIndx(addInt(i_1720234, 2), 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          F.line = 183;
          i_1720234 = addInt(i_1720234, 3);
          }
          else {
            F.line = 184;
            result_1720232 = i_1720234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1720231[chckIndx(i_1720234, 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_1720234, 3) < l_1720235)) Tmp8 = false; else {              Tmp8 = (((s_1720231[chckIndx(addInt(i_1720234, 1), 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_1720231[chckIndx(addInt(i_1720234, 2), 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_1720231[chckIndx(addInt(i_1720234, 3), 0, (s_1720231 != null ? s_1720231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          F.line = 189;
          i_1720234 = addInt(i_1720234, 4);
          }
          else {
            F.line = 190;
            result_1720232 = i_1720234;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 192;
            result_1720232 = i_1720234;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    F.line = 193;
    result_1720232 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1720232;

}
function nsuRepeatChar(c_9575048, count_9575049) {
  var result_9575050 = null;

  var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1282;
    result_9575050 = nimCopy(null, mnewString(count_9575049), NTI112);
    L1: do {
      F.line = 1283;
      var i_9575059 = 0;
      F.line = 66;
      var colontmp__11840213 = 0;
      F.line = 1283;
      colontmp__11840213 = subInt(count_9575049, 1);
      F.line = 77;
      var res_11840214 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_11840214 <= colontmp__11840213)) break L3;
            F.line = 1283;
            i_9575059 = res_11840214;
            F.line = 1283;
            result_9575050[chckIndx(i_9575059, 0, (result_9575050 != null ? result_9575050.length : 0)+0-1)-0] = c_9575048;
            F.line = 80;
            res_11840214 = addInt(res_11840214, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9575050;

}
function align_string_11300222(s_11300224, minimum_width_11300225, align_11300226, fill_11300227) {
      var Tmp1;

  var result_11300228 = null;

  var F={procname:"strformat.alignString",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    if ((minimum_width_11300225 == 0)) {
    F.line = 282;
    result_11300228 = nimCopy(null, s_11300224, NTI112);
    }
    else {
      F.line = 284;
      if ((validate_utf8_1720229(s_11300224) == -1)) {
      Tmp1 = nucruneLen(s_11300224);
      }
      else {
      Tmp1 = (s_11300224 != null ? s_11300224.length : 0);
      }
      
      var s_rune_len_11300229 = Tmp1;
      F.line = 285;
      var to_fill_11300230 = subInt(minimum_width_11300225, s_rune_len_11300229);
      if ((to_fill_11300230 <= 0)) {
      F.line = 287;
      result_11300228 = nimCopy(null, s_11300224, NTI112);
      }
      else {
      if (((align_11300226 == 60) || (align_11300226 == 0))) {
      F.line = 289;
      result_11300228 = nimCopy(null, (s_11300224 || []).concat(nsuRepeatChar(fill_11300227, chckRange(to_fill_11300230, 0, 2147483647)) || []), NTI112);
      }
      else {
      if ((align_11300226 == 94)) {
      F.line = 291;
      var half_11300231 = divInt(to_fill_11300230, 2);
      F.line = 292;
      result_11300228 = nimCopy(null, (nsuRepeatChar(fill_11300227, chckRange(half_11300231, 0, 2147483647)) || []).concat(s_11300224 || [],nsuRepeatChar(fill_11300227, chckRange(subInt(to_fill_11300230, half_11300231), 0, 2147483647)) || []), NTI112);
      }
      else {
        F.line = 294;
        result_11300228 = nimCopy(null, (nsuRepeatChar(fill_11300227, chckRange(to_fill_11300230, 0, 2147483647)) || []).concat(s_11300224 || []), NTI112);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_11300228;

}
function format_value_11345080(result_11345083, result_11345083_Idx, value_11345084, specifier_11345085) {
  var F={procname:"strformat.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    F.line = 502;
    var spec_11345086 = parse_standard_format_specifier_11300322(specifier_11345085, 0, false);
    F.line = 503;
    var value_11345087 = nimCopy(null, value_11345084, NTI112);
    F.line = 504;
    switch (spec_11345086.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 507;
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_11345086.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    if (!((spec_11345086.precision == -1))) {
    if ((spec_11345086.precision < nucruneLen(value_11345087))) {
    F.line = 512;
    (value_11345087 == null ? value_11345087 = mnewString(chckRange(rune_offset_2100244(value_11345087, chckRange(spec_11345086.precision, 0, 2147483647), 0), 0, 2147483647)) : value_11345087.length = chckRange(rune_offset_2100244(value_11345087, chckRange(spec_11345086.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    F.line = 513;
    if (result_11345083[result_11345083_Idx] != null) { result_11345083[result_11345083_Idx] = (result_11345083[result_11345083_Idx]).concat(align_string_11300222(value_11345087, spec_11345086.minimumWidth, spec_11345086.align, spec_11345086.fill)); } else { result_11345083[result_11345083_Idx] = align_string_11300222(value_11345087, spec_11345086.minimumWidth, spec_11345086.align, spec_11345086.fill).slice(); };
  framePtr = F.prev;

  
}
function HEX5BHEX5D_11201548(s_11201554, x_11201556) {
  var result_11201558 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2492;
    var a_11201601 = x_11201556.a;
    F.line = 2493;
    var l_11201801 = addInt(subInt(x_11201556.b, a_11201601), 1);
    F.line = 2494;
    result_11201558 = new Array(chckRange(l_11201801, 0, 2147483647)); for (var i=0;i<chckRange(l_11201801, 0, 2147483647);++i) {result_11201558[i]=null;}    L1: do {
      F.line = 2495;
      var i_11201816 = 0;
      F.line = 106;
      var i_11840222 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_11840222 < l_11201801)) break L3;
            F.line = 2495;
            i_11201816 = i_11840222;
            F.line = 2495;
            result_11201558[chckIndx(i_11201816, 0, (result_11201558 != null ? result_11201558.length : 0)+0-1)-0] = nimCopy(null, s_11201554[chckIndx(addInt(i_11201816, a_11201601), 0, (s_11201554 != null ? s_11201554.length : 0)+0-1)-0], NTI112);
            F.line = 109;
            i_11840222 = addInt(i_11840222, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_11201558;

}
function HEX2EHEX2E_2355220(a_2355225, b_2355227) {
  var result_2355229 = {a: 0, b: 0};

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_2355229, {a: a_2355225, b: b_2355227}, NTI1006907);
  framePtr = F.prev;

  return result_2355229;

}
function get_path_segments_11201513(self_11201515) {
  var result_11201517 = null;

  var F={procname:"uri3.getPathSegments",prev:framePtr,filename:"uri3.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 227;
    var paths_11201519 = nsuSplitString(self_11201515.path, makeNimstrLit("/"), -1);
    F.line = 228;
    result_11201517 = nimCopy(null, HEX5BHEX5D_11201548(paths_11201519, HEX2EHEX2E_2355220(1, (paths_11201519 != null ? (paths_11201519.length-1) : -1))), NTI11201557);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11201517;

}
function get_path_segment_11201845(self_11201847, index_11201848) {
    var Tmp1;

  var result_11201849 = null;

  var F={procname:"uri3.getPathSegment",prev:framePtr,filename:"uri3.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 233;
    result_11201849 = nimCopy(null, (Tmp1 = get_path_segments_11201513(self_11201847), Tmp1)[chckIndx(index_11201848, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0], NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11201849;

}
function get_query_11201899(self_11201901, query_11201902, default_11201903) {
  var result_11201904 = null;

  var F={procname:"uri3.getQuery",prev:framePtr,filename:"uri3.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 249;
    var query_result_11201905 = nimCopy(null, default_11201903, NTI112);
    L1: do {
      F.line = 250;
      var i_11210214 = null;
      F.line = 184;
      var i_11840235 = 0;
      F.line = 185;
      var l_11840236 = (self_11201901.queries != null ? self_11201901.queries.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_11840235 < l_11840236)) break L3;
            F.line = 250;
            i_11210214 = self_11201901.queries[chckIndx(i_11840235, 0, (self_11201901.queries != null ? self_11201901.queries.length : 0)+0-1)-0];
            if (eqStrings(i_11210214[chckIndx(0, 0, (i_11210214 != null ? i_11210214.length : 0)+0-1)-0], query_11201902)) {
            F.line = 252;
            query_result_11201905 = nimCopy(null, i_11210214[chckIndx(1, 0, (i_11210214 != null ? i_11210214.length : 0)+0-1)-0], NTI112);
            F.line = 253;
            break L1;
            }
            
            F.line = 188;
            i_11840235 = addInt(i_11840235, 1);
            if (!(((self_11201901.queries != null ? self_11201901.queries.length : 0) == l_11840236))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 254;
    result_11201904 = nimCopy(null, query_result_11201905, NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11201904;

}
function HEX24_1282075(js_object_1282077) {
  var result_1282078 = null;

  var F={procname:"jObj.$",prev:framePtr,filename:"jObj.nim",line:0};
  framePtr = F;
    F.line = 23;
    result_1282078 = nimCopy(null, cstrToNimstr((js_object_1282077)), NTI112);
  framePtr = F.prev;

  return result_1282078;

}
function nsuToLowerAsciiStr(s_9075048) {
  var result_9075049 = null;

  var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 214;
    result_9075049 = nimCopy(null, mnewString(chckRange((s_9075048 != null ? s_9075048.length : 0), 0, 2147483647)), NTI112);
    L1: do {
      F.line = 215;
      var iHEX60gensym9075050_9080009 = 0;
      F.line = 66;
      var colontmp__11840241 = 0;
      F.line = 215;
      colontmp__11840241 = subInt((s_9075048 != null ? s_9075048.length : 0), 1);
      F.line = 77;
      var res_11840242 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_11840242 <= colontmp__11840241)) break L3;
            F.line = 230;
            iHEX60gensym9075050_9080009 = res_11840242;
            F.line = 216;
            result_9075049[chckIndx(iHEX60gensym9075050_9080009, 0, (result_9075049 != null ? result_9075049.length : 0)+0-1)-0] = nsuToLowerAsciiChar(s_9075048[chckIndx(iHEX60gensym9075050_9080009, 0, (s_9075048 != null ? s_9075048.length : 0)+0-1)-0]);
            F.line = 80;
            res_11840242 = addInt(res_11840242, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9075049;

}
function HEX5BHEX5D_10640146(t_10640152, key_10640153) {
  var result_10640155 = null;
  var result_10640155_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym1025595_10640156 = [0];
    F.line = 258;
    var indexHEX60gensym1025596_10650605 = raw_get_10640157(t_10640152, key_10640153, hcHEX60gensym1025595_10640156, 0);
    if ((0 <= indexHEX60gensym1025596_10650605)) {
    F.line = 259;
    result_10640155 = t_10640152.data[chckIndx(indexHEX60gensym1025596_10650605, 0, (t_10640152.data != null ? t_10640152.data.length : 0)+0-1)-0]; result_10640155_Idx = "Field3";
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_10640153 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return [result_10640155, result_10640155_Idx];

}
function HEX5BHEX5D_10655497(node_10655499, name_10655500) {
    var Tmp1;
    var Tmp2;

  var result_10655501 = null;

  var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
    if (!(!((node_10655499 == null)))) {
    F.line = 464;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(464, 9) `not isNil(node)` "));
    }
    
    if (!((node_10655499.kind == 5))) {
    F.line = 465;
    failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(465, 9) `node.kind == JObject` "));
    }
    
    F.line = 468;
    var Tmp1 = node_10655499;
    if (ConstSet29[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    result_10655501 = (Tmp2 = HEX5BHEX5D_10640146(Tmp1.fields, name_10655500), Tmp2)[0][Tmp2[1]];
  framePtr = F.prev;

  return result_10655501;

}
function lv_update_state_11280094(params_11280096) {
  var F={procname:"liveview.lvUpdateState",prev:framePtr,filename:"liveview.nim",line:0};
  framePtr = F;
    F.line = 30;
    lv_action_11241074(HEX25_10605802([nimCopy(null, {Field0: makeNimstrLit("action"), Field1: HEX25_10605683(makeNimstrLit("updateState"))}, NTI11285002), nimCopy(null, {Field0: makeNimstrLit("params"), Field1: params_11280096}, NTI11285002)]));
  framePtr = F.prev;

  
}
function update_ui_11495018(url_11495020) {
      function HEX3Aanonymous_11495031(evt_11495033) {
        var F={procname:"updateUI.:anonymous",prev:framePtr,filename:"setupPageJs.nim",line:0};
        framePtr = F;
          evt_11495033.preventDefault();
          F.line = 40;
          lv_visit_page_11265018(HEX24_1282075(evt_11495033.target.href), {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null});
        framePtr = F.prev;

        
      }
      function HEX3Aanonymous_11530004(evt_11530006) {
          var Tmp1;

        var F={procname:"updateUI.:anonymous",prev:framePtr,filename:"setupPageJs.nim",line:0};
        framePtr = F;
          F.line = 54;
          selected_db_11525006 = nimCopy(null, nsuToLowerAsciiStr(cstrToNimstr((evt_11530006.target.value))), NTI112);
          if (!(eqStrings(selected_db_11525006, makeNimstrLit("sqlite")))) {
          Tmp1 = db_user_info_11525016.show();
          }
          else {
          Tmp1 = db_user_info_11525016.hide();
          }
          
          Tmp1;
        framePtr = F.prev;

        
      }
      function HEX3Aanonymous_11570015(evt_11570017) {
        var F={procname:"updateUI.:anonymous",prev:framePtr,filename:"setupPageJs.nim",line:0};
        framePtr = F;
          evt_11570017.preventDefault();
          F.line = 66;
          evt_11570017.target.text = "Sending...";
          F.line = 67;
          var db_user_info_form_11600055 = HEX25_10605802([nimCopy(null, {Field0: makeNimstrLit("dbUser"), Field1: HEX25_10605802([nimCopy(null, {Field0: makeNimstrLit("dbType"), Field1: HEX25_10605683(selected_db_11525006)}, NTI11590004)])}, NTI11590002), nimCopy(null, {Field0: makeNimstrLit("admUser"), Field1: new_jobject_10446235()}, NTI11590002), nimCopy(null, {Field0: makeNimstrLit("url"), Field1: HEX25_10605683(HEX24_1282075(evt_11570017.target.href))}, NTI11590002)]);
          L1: do {
            F.line = 68;
            var input_11600056 = null;
            F.line = 359;
            var colontmp__11840228 = null;
            F.line = 68;
            colontmp__11840228 = jq_1281087(makeNimstrLit("input[name*=\'db\']"));
            F.line = 361;
            var v_11840229 = null;
            F.line = 362;
            for (var k in colontmp__11840228) {
            F.line = 363;
              if (!colontmp__11840228.hasOwnProperty(k)) continue;
            F.line = 364;
              v_11840229=colontmp__11840228[k];
            F.line = 68;
            input_11600056 = v_11840229;
            F.line = 69;
            var val_11605004 = input_11600056.value;
            F.line = 70;
            var name_11610004 = input_11600056.name;
            if ((!((val_11605004 === undefined)) && !((name_11610004 === undefined)))) {
            F.line = 72;
            HEX5BHEX5DHEX3D_10606214(HEX5BHEX5D_10655497(db_user_info_form_11600055, makeNimstrLit("dbUser")), HEX24_1282075(name_11610004), HEX25_10605683(HEX24_1282075(val_11605004)));
            }
            
            F.line = 366;
            }
          } while(false);
          L2: do {
            F.line = 74;
            var input_11610014 = null;
            F.line = 359;
            var colontmp__11840231 = null;
            F.line = 74;
            colontmp__11840231 = jq_1281087(makeNimstrLit("input[name*=\'adm\']"));
            F.line = 361;
            var v_11840232 = null;
            F.line = 362;
            for (var k in colontmp__11840231) {
            F.line = 363;
              if (!colontmp__11840231.hasOwnProperty(k)) continue;
            F.line = 364;
              v_11840232=colontmp__11840231[k];
            F.line = 74;
            input_11610014 = v_11840232;
            F.line = 75;
            var val_11615004 = input_11610014.value;
            F.line = 76;
            var name_11620004 = input_11610014.name;
            if ((!((val_11615004 === undefined)) && !((name_11620004 === undefined)))) {
            F.line = 78;
            HEX5BHEX5DHEX3D_10606214(HEX5BHEX5D_10655497(db_user_info_form_11600055, makeNimstrLit("admUser")), HEX24_1282075(name_11620004), HEX25_10605683(HEX24_1282075(val_11615004)));
            }
            
            F.line = 366;
            }
          } while(false);
          F.line = 80;
          lv_update_state_11280094(db_user_info_form_11600055);
          F.line = 81;
          evt_11570017.target.text = "Done";
        framePtr = F.prev;

        
      }
      function HEX3Aanonymous_11645015(evt_11645017) {
        var F={procname:"updateUI.:anonymous",prev:framePtr,filename:"setupPageJs.nim",line:0};
        framePtr = F;
          evt_11645017.preventDefault();
          F.line = 90;
          lv_visit_page_11265018(HEX24_1282075(evt_11645017.target.href), {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null});
        framePtr = F.prev;

        
      }

  var F={procname:"setupPageJs.updateUI",prev:framePtr,filename:"setupPageJs.nim",line:0};
  framePtr = F;
    F.line = 33;
    switch (toJSStr(get_query_11201899(url_11495020, makeNimstrLit("section"), []))) {
    case "validateRadius":
      F.line = 36;
      var database_setup_11495021 = jq_1281087(makeNimstrLit("#databaseSetup"));
      if ((!((database_setup_11495021 == null)) && !((database_setup_11495021[0] === undefined)))) {
      database_setup_11495021.click((HEX3Aanonymous_11495031));
      }
      
      break;
    case "databaseSetup":
      F.line = 45;
      var select_db_11525005 = jq_1281087(makeNimstrLit("#selectDb"));
      F.line = 46;
      var selected_db_11525006 = makeNimstrLit("sqlite");
      if ((!((select_db_11525005 == null)) && !((select_db_11525005[0] === undefined)))) {
      F.line = 49;
      var db_user_info_11525016 = jq_1281087(makeNimstrLit("#dbUserInfo"));
      if (!((db_user_info_11525016 == null))) {
      db_user_info_11525016.hide();
      }
      
      select_db_11525005.change((HEX3Aanonymous_11530004));
      }
      
      F.line = 62;
      var done_setup_11570005 = jq_1281087(makeNimstrLit("#doneSetup"));
      if ((!((done_setup_11570005 == null)) && !((done_setup_11570005[0] === undefined)))) {
      done_setup_11570005.click((HEX3Aanonymous_11570015));
      }
      
      break;
    default: 
      F.line = 86;
      var start_setup_11645005 = jq_1281087(makeNimstrLit("#startSetup"));
      if ((!((start_setup_11645005 == null)) && !((start_setup_11645005[0] === undefined)))) {
      start_setup_11645005.click((HEX3Aanonymous_11645015));
      }
      
      break;
    }
  framePtr = F.prev;

  
}
function get_bool_10480046(n_10480048, default_10480049) {
      var Tmp1;
      var Tmp2;

  var result_10480050 = false;

  var F={procname:"json.getBool",prev:framePtr,filename:"json.nim",line:0};
  framePtr = F;
  BeforeRet: do {
      if ((n_10480048 == null)) Tmp1 = true; else {        Tmp1 = !((n_10480048.kind == 1));      }    if (Tmp1) {
    F.line = 251;
    result_10480050 = default_10480049;
    break BeforeRet;
    }
    else {
      F.line = 252;
      var Tmp2 = n_10480048;
      if (ConstSet30[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'bval\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
      result_10480050 = Tmp2.bval;
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_10480050;

}
function is_undefined_315483(x_315486) {
  var result_315487 = false;

  var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"reprjs.nim",line:0};
  framePtr = F;
    F.line = 34;
    result_315487 = x_315486 === undefined;
  framePtr = F.prev;

  return result_315487;

}
function update_state_11406015(url_11406017, params_11406018) {
          var Tmp3;
          var Tmp8;

  var F={procname:"setupPageJs.updateState",prev:framePtr,filename:"setupPageJs.nim",line:0};
  framePtr = F;
    F.line = 12;
    switch (toJSStr(get_query_11201899(url_11406017, makeNimstrLit("section"), []))) {
    case "done":
      if (!(get_bool_10480046(HEX7BHEX7D_10765237(params_11406018, makeNimstrLit("isSuccess")), false))) {
      F.line = 15;
      var db_user_11406026 = HEX7BHEX7D_10765237(HEX7BHEX7D_10765237(params_11406018, makeNimstrLit("data")), makeNimstrLit("dbUser"));
      F.line = 16;
      var adm_user_11406031 = HEX7BHEX7D_10765237(HEX7BHEX7D_10765237(params_11406018, makeNimstrLit("data")), makeNimstrLit("admUser"));
      F.line = 18;
      var fmt_res_11406035 = mnewString(0);
      F.line = 18;
      if (fmt_res_11406035 != null) { fmt_res_11406035 = (fmt_res_11406035).concat(makeNimstrLit("span[class*=\'error\']")); } else { fmt_res_11406035 = makeNimstrLit("span[class*=\'error\']"); };
      jq_1281087(fmt_res_11406035).remove();
      if (!(get_bool_10480046(HEX7BHEX7D_10765237(db_user_11406026, makeNimstrLit("isValid")), false))) {
      L1: do {
        F.line = 21;
        var key_11415010 = null;
        F.line = 21;
        var val_11415011 = null;
        F.line = 755;
        var colontmp__11840250 = null;
        F.line = 21;
        colontmp__11840250 = HEX7BHEX7D_10765237(db_user_11406026, makeNimstrLit("notValids"));
        if (!((colontmp__11840250.kind == 5))) {
        F.line = 757;
        failed_assert_impl_102680((makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(757, 10) `node.kind == JObject` : pairs() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__11840250.kind, NTI10446041) || []));
        }
        
        L2: do {
          F.line = 758;
          var key_11840258 = null;
          F.line = 758;
          var val_11840259 = null;
          F.line = 1646;
          var colontmp__11840260 = {data: null, counter: 0, first: 0, last: 0};
          F.line = 758;
          var Tmp3 = colontmp__11840250;
          if (ConstSet31[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
          nimCopy(colontmp__11840260, Tmp3.fields, NTI10446067);
          F.line = 1672;
          var l_11840261 = len_10625128(colontmp__11840260);
          if ((0 < colontmp__11840260.counter)) {
          F.line = 1251;
          var h_11840262 = colontmp__11840260.first;
          L4: do {
            F.line = 1252;
              L5: while (true) {
              if (!(0 <= h_11840262)) break L5;
                F.line = 1253;
                var nxt_11840264 = colontmp__11840260.data[chckIndx(h_11840262, 0, (colontmp__11840260.data != null ? colontmp__11840260.data.length : 0)+0-1)-0].Field1;
                if (is_filled_1009018(colontmp__11840260.data[chckIndx(h_11840262, 0, (colontmp__11840260.data != null ? colontmp__11840260.data.length : 0)+0-1)-0].Field0)) {
                F.line = 758;
                key_11840258 = colontmp__11840260.data[chckIndx(h_11840262, 0, (colontmp__11840260.data != null ? colontmp__11840260.data.length : 0)+0-1)-0].Field2;
                F.line = 1674;
                val_11840259 = colontmp__11840260.data[chckIndx(h_11840262, 0, (colontmp__11840260.data != null ? colontmp__11840260.data.length : 0)+0-1)-0].Field3;
                F.line = 21;
                key_11415010 = key_11840258;
                F.line = 759;
                val_11415011 = val_11840259;
                F.line = 22;
                var fmt_res_11415012 = [mnewString(0)];
                F.line = 22;
                if (fmt_res_11415012[0] != null) { fmt_res_11415012[0] = (fmt_res_11415012[0]).concat(makeNimstrLit("input[name=\'")); } else { fmt_res_11415012[0] = makeNimstrLit("input[name=\'"); };
                F.line = 22;
                format_value_11345080(fmt_res_11415012, 0, key_11415010, []);
                F.line = 22;
                if (fmt_res_11415012[0] != null) { fmt_res_11415012[0] = (fmt_res_11415012[0]).concat(makeNimstrLit("\']")); } else { fmt_res_11415012[0] = makeNimstrLit("\']"); };
                F.line = 24;
                var fmt_res_11425004 = [mnewString(0)];
                F.line = 24;
                if (fmt_res_11425004[0] != null) { fmt_res_11425004[0] = (fmt_res_11425004[0]).concat(makeNimstrLit("<span style=\"display:block\" class=\"error invalid-feedback\">")); } else { fmt_res_11425004[0] = makeNimstrLit("<span style=\"display:block\" class=\"error invalid-feedback\">"); };
                F.line = 24;
                format_value_11345080(fmt_res_11425004, 0, get_str_10465703(HEX5BHEX5D_10655497(val_11415011, makeNimstrLit("msg")), []), []);
                F.line = 24;
                if (fmt_res_11425004[0] != null) { fmt_res_11425004[0] = (fmt_res_11425004[0]).concat(makeNimstrLit("</span>")); } else { fmt_res_11425004[0] = makeNimstrLit("</span>"); };
                jq_1281087(fmt_res_11415012[0]).parent().append((toJSStr(fmt_res_11425004[0])));
                if (!((len_10625128(colontmp__11840260) == l_11840261))) {
                F.line = 1675;
                failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 1256;
                h_11840262 = nxt_11840264;
              }
          } while(false);
          }
          
        } while(false);
      } while(false);
      }
      
      if (!(get_bool_10480046(HEX7BHEX7D_10765237(adm_user_11406031, makeNimstrLit("isValid")), false))) {
      L6: do {
        F.line = 27;
        var key_11455011 = null;
        F.line = 27;
        var val_11455012 = null;
        F.line = 755;
        var colontmp__11840266 = null;
        F.line = 27;
        colontmp__11840266 = HEX7BHEX7D_10765237(adm_user_11406031, makeNimstrLit("notValids"));
        if (!((colontmp__11840266.kind == 5))) {
        F.line = 757;
        failed_assert_impl_102680((makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/json.nim(757, 10) `node.kind == JObject` : pairs() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__11840266.kind, NTI10446041) || []));
        }
        
        L7: do {
          F.line = 758;
          var key_11840268 = null;
          F.line = 758;
          var val_11840269 = null;
          F.line = 1646;
          var colontmp__11840270 = {data: null, counter: 0, first: 0, last: 0};
          F.line = 758;
          var Tmp8 = colontmp__11840266;
          if (ConstSet32[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
          nimCopy(colontmp__11840270, Tmp8.fields, NTI10446067);
          F.line = 1672;
          var l_11840271 = len_10625128(colontmp__11840270);
          if ((0 < colontmp__11840270.counter)) {
          F.line = 1251;
          var h_11840272 = colontmp__11840270.first;
          L9: do {
            F.line = 1252;
              L10: while (true) {
              if (!(0 <= h_11840272)) break L10;
                F.line = 1253;
                var nxt_11840274 = colontmp__11840270.data[chckIndx(h_11840272, 0, (colontmp__11840270.data != null ? colontmp__11840270.data.length : 0)+0-1)-0].Field1;
                if (is_filled_1009018(colontmp__11840270.data[chckIndx(h_11840272, 0, (colontmp__11840270.data != null ? colontmp__11840270.data.length : 0)+0-1)-0].Field0)) {
                F.line = 758;
                key_11840268 = colontmp__11840270.data[chckIndx(h_11840272, 0, (colontmp__11840270.data != null ? colontmp__11840270.data.length : 0)+0-1)-0].Field2;
                F.line = 1674;
                val_11840269 = colontmp__11840270.data[chckIndx(h_11840272, 0, (colontmp__11840270.data != null ? colontmp__11840270.data.length : 0)+0-1)-0].Field3;
                F.line = 27;
                key_11455011 = key_11840268;
                F.line = 759;
                val_11455012 = val_11840269;
                F.line = 28;
                var fmt_res_11455013 = [mnewString(0)];
                F.line = 28;
                if (fmt_res_11455013[0] != null) { fmt_res_11455013[0] = (fmt_res_11455013[0]).concat(makeNimstrLit("input[name=\'")); } else { fmt_res_11455013[0] = makeNimstrLit("input[name=\'"); };
                F.line = 28;
                format_value_11345080(fmt_res_11455013, 0, key_11455011, []);
                F.line = 28;
                if (fmt_res_11455013[0] != null) { fmt_res_11455013[0] = (fmt_res_11455013[0]).concat(makeNimstrLit("\']")); } else { fmt_res_11455013[0] = makeNimstrLit("\']"); };
                F.line = 30;
                var fmt_res_11465004 = [mnewString(0)];
                F.line = 30;
                if (fmt_res_11465004[0] != null) { fmt_res_11465004[0] = (fmt_res_11465004[0]).concat(makeNimstrLit("<span style=\"display:block\" class=\"error invalid-feedback\">")); } else { fmt_res_11465004[0] = makeNimstrLit("<span style=\"display:block\" class=\"error invalid-feedback\">"); };
                F.line = 30;
                format_value_11345080(fmt_res_11465004, 0, get_str_10465703(HEX5BHEX5D_10655497(val_11455012, makeNimstrLit("msg")), []), []);
                F.line = 30;
                if (fmt_res_11465004[0] != null) { fmt_res_11465004[0] = (fmt_res_11465004[0]).concat(makeNimstrLit("</span>")); } else { fmt_res_11465004[0] = makeNimstrLit("</span>"); };
                jq_1281087(fmt_res_11455013[0]).parent().append((toJSStr(fmt_res_11465004[0])));
                if (!((len_10625128(colontmp__11840270) == l_11840271))) {
                F.line = 1675;
                failed_assert_impl_102680(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 1256;
                h_11840272 = nxt_11840274;
              }
          } while(false);
          }
          
        } while(false);
      } while(false);
      }
      
      }
      
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  
}
function init_lv_11715019() {
      var Tmp1;
    function HEX3Aanonymous_11720011(evt_11720013) {
      var F={procname:"initLV.:anonymous",prev:framePtr,filename:"radmngJs.nim",line:0};
      framePtr = F;
        wnd_11676019.toastr.success(("Connected"));
        if (!(eqStrings(lv_last_visited_page_11290095(), lv_current_page_11290079()))) {
        F.line = 121;
        lv_visit_page_11265018(lv_current_page_11290079(), {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null});
        }
        
        F.line = 122;
        heartbeat_check_11676033(init_lv_11715019);
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_11760012(evt_11760014) {
      var F={procname:"initLV.:anonymous",prev:framePtr,filename:"radmngJs.nim",line:0};
      framePtr = F;
        F.line = 125;
        var msg_11765010 = parse_json_10960257(cstrToNimstr((evt_11760014.data)));
        F.line = 126;
        var url_11765016 = parse_uri3_11201041(get_str_10465703(HEX7BHEX7D_10765237(HEX7BHEX7D_10765237(msg_11765010, makeNimstrLit("params")), makeNimstrLit("url")), []));
        F.line = 128;
        switch (toJSStr(get_str_10465703(HEX7BHEX7D_10765237(msg_11765010, makeNimstrLit("action")), []))) {
        case "updateUI":
          F.line = 130;
          var target_11765023 = get_str_10465703(HEX7BHEX7D_10765237(msg_11765010, makeNimstrLit("target")), []);
          F.line = 131;
          var ui_11765027 = get_str_10465703(HEX7BHEX7D_10765237(msg_11765010, makeNimstrLit("ui")), []);
          F.line = 132;
          var fmt_res_11765028 = [mnewString(0)];
          F.line = 132;
          if (fmt_res_11765028[0] != null) { fmt_res_11765028[0] = (fmt_res_11765028[0]).concat(makeNimstrLit("#")); } else { fmt_res_11765028[0] = makeNimstrLit("#"); };
          F.line = 132;
          format_value_11345080(fmt_res_11765028, 0, target_11765023, []);
          jq_1281087(fmt_res_11765028[0]).html((toJSStr(ui_11765027)));
          F.line = 134;
          switch (toJSStr(get_path_segment_11201845(url_11765016, 0))) {
          case "setup":
            F.line = 136;
            update_ui_11495018(url_11765016);
            break;
          default: 
            break;
          }
          break;
        case "updateState":
          F.line = 141;
          switch (toJSStr(get_path_segment_11201845(url_11765016, 0))) {
          case "setup":
            F.line = 143;
            update_state_11406015(url_11765016, HEX7BHEX7D_10765237(msg_11765010, makeNimstrLit("params")));
            break;
          default: 
            break;
          }
          break;
        default: 
          break;
        }
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_11790012(evt_11790014) {
      var F={procname:"initLV.:anonymous",prev:framePtr,filename:"radmngJs.nim",line:0};
      framePtr = F;
        F.line = 149;
        heartbeat_check_11676033(init_lv_11715019);
        wnd_11676019.toastr.error(("Connection loss, reconnecting..."));
      framePtr = F.prev;

      
    }

  var F={procname:"radmngJs.initLV",prev:framePtr,filename:"radmngJs.nim",line:0};
  framePtr = F;
      if ((lv_instance_11241054() == null)) Tmp1 = true; else {        Tmp1 = ((lv_instance_11241054().readyState) == 3);      }    if (Tmp1) {
    F.line = 116;
    lv_init_11241028(new_ws_1281053(makeNimstrLit("ws://localhost:8080/liveview")));
    F.line = 117;
    var lv_11720010 = lv_instance_11241054();
    F.line = 118;
    lv_11720010.onopen = HEX3Aanonymous_11720011;
    F.line = 124;
    lv_11720010.onmessage = HEX3Aanonymous_11760012;
    F.line = 148;
    lv_11720010.onclose = HEX3Aanonymous_11790012;
    }
    
  framePtr = F.prev;

  
}
function HEX3Aanonymous_11825027() {
  var F={procname:"radmngJs.:anonymous",prev:framePtr,filename:"radmngJs.nim",line:0};
  framePtr = F;
    F.line = 153;
    init_lv_11715019();
  framePtr = F.prev;

  
}
jqSelector(document).ready((HEX3Aanonymous_11825027));
