include ffi

import strformat

var errors: JsObject = newJsObject()

proc setError*(key: cstring, value: cstring) =
  errors[key] = value

proc getError*(key: cstring): cstring =
  result = errors[key].to(cstring)

proc delError*(key: cstring) =
  if not errors[key].isNil:
    errors[key].jsDelete

proc clearError*() =
  errors.jsDelete
  errors = newJsObject()

proc validateNotEmpty*(fieldId: cstring, errMsgId: cstring = "") =
  let val = getVNodeById(fieldId).getInputText
  if val.isNil or val == "":
    setError(fieldId, "required.")

  else:
    setError(fieldId, "")

proc validateNotFloat*(fieldId: cstring, errMsgId: cstring = "") =
  var val = getVNodeById(fieldId).getInputText
  if val.isNil:
    val = ""

  if ffi.isNaN(val.toFloat):
    setError(fieldId, "not decimal.")

  else:
    setError(fieldId, "")

proc validateNotInt*(fieldId: cstring, errMsgId: cstring = "") =
  var val = getVNodeById(fieldId).getInputText
  if val.isNil:
    val = ""

  if ffi.isNaN(val.toInt):
    setError(fieldId, "not number.")

  else:
    setError(fieldId, "")
