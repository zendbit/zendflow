/* Generated by the Nim Compiler v1.0.6 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI3662 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI176616 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI21156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3650 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3738 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI74557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI85017 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI85017 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI85017.node = NNI85017;
var NNI74557 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI74557.node = NNI74557;
var NNI3738 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3738.node = NNI3738;
var NNI3608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3608.node = NNI3608;
NTI3738.base = NTI3608;
NTI74557.base = NTI3738;
NTI85017.base = NTI74557;
var NNI3650 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3650.node = NNI3650;
var NNI3628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3628.node = NNI3628;
NTI3708.base = NTI3626;
NTI3714.base = NTI3626;
var NNI3626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3714, name: "up", sons: null}]};
NTI3626.node = NNI3626;
NTI3626.base = NTI3608;
NTI3628.base = NTI3626;
NTI3650.base = NTI3628;
var NNI21156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI21156.node = NNI21156;
NTI176616.base = NTI138;
var NNI3646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3646.node = NNI3646;
var NNI3642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3642.node = NNI3642;
NTI3642.base = NTI3628;
NTI3646.base = NTI3642;
var NNI3658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3658.node = NNI3658;
NTI3658.base = NTI3628;
var NNI3662 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3662.node = NNI3662;
NTI3662.base = NTI3628;

function toJSStr(s_23304) {
										var Tmp5;
						var Tmp7;

	var result_23305 = null;

		var res_23363 = new_seq_23336((s_23304 != null ? s_23304.length : 0));
		var i_23365 = 0;
		var j_23367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_23365 < (s_23304 != null ? s_23304.length : 0))) break L2;
					var c_23368 = s_23304[i_23365];
					if ((c_23368 < 128)) {
					res_23363[j_23367] = String.fromCharCode(c_23368);
					i_23365 += 1;
					}
					else {
						var helper_23391 = new_seq_23336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_23392 = c_23368.toString(16);
									if (((code_23392 != null ? code_23392.length : 0) == 1)) {
									if (helper_23391 != null) { helper_23391.push("%0"); } else { helper_23391 = ["%0"]; };
									}
									else {
									if (helper_23391 != null) { helper_23391.push("%"); } else { helper_23391 = ["%"]; };
									}
									
									if (helper_23391 != null) { helper_23391.push(code_23392); } else { helper_23391 = [code_23392]; };
									i_23365 += 1;
										if (((s_23304 != null ? s_23304.length : 0) <= i_23365)) Tmp5 = true; else {											Tmp5 = (s_23304[i_23365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_23368 = s_23304[i_23365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_23363[j_23367] = decodeURIComponent(helper_23391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_23363[j_23367] = helper_23391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_23367 += 1;
				}
		} while(false);
		if (res_23363 === null) res_23363 = [];
               if (res_23363.length < j_23367) { for (var i=res_23363.length;i<j_23367;++i) res_23363.push(null); }
               else { res_23363.length = j_23367; };
		result_23305 = res_23363.join("");

	return result_23305;

}

function makeNimstrLit(c_23270) {
		  var ln = c_23270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23270.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24827, src_24828, ti_24829) {
	var result_25019 = null;

		switch (ti_24829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24801(ti_24829))) {
			result_25019 = src_24828;
			}
			else {
				result_25019 = [src_24828[0], src_24828[1]];
			}
			
			break;
		case 19:
			      if (dest_24827 === null || dest_24827 === undefined) {
        dest_24827 = {};
      }
      else {
        for (var key in dest_24827) { delete dest_24827[key]; }
      }
      for (var key in src_24828) { dest_24827[key] = src_24828[key]; }
      result_25019 = dest_24827;
    
			break;
		case 18:
		case 17:
			if (!((ti_24829.base == null))) {
			result_25019 = nimCopy(dest_24827, src_24828, ti_24829.base);
			}
			else {
			if ((ti_24829.kind == 17)) {
			result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {m_type: ti_24829} : dest_24827;
			}
			else {
				result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {} : dest_24827;
			}
			}
			nimCopyAux(result_25019, src_24828, ti_24829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24828 === null) {
        result_25019 = null;
      }
      else {
        if (dest_24827 === null || dest_24827 === undefined) {
          dest_24827 = new Array(src_24828.length);
        }
        else {
          dest_24827.length = src_24828.length;
        }
        result_25019 = dest_24827;
        for (var i = 0; i < src_24828.length; ++i) {
          result_25019[i] = nimCopy(result_25019[i], src_24828[i], ti_24829.base);
        }
      }
    
			break;
		case 28:
			      if (src_24828 !== null) {
        result_25019 = src_24828.slice(0);
      }
    
			break;
		default: 
			result_25019 = src_24828;
			break;
		}

	return result_25019;

}

function arrayConstr(len_25086, value_25087, typ_25088) {
		    var result = new Array(len_25086);
    for (var i = 0; i < len_25086; ++i) result[i] = nimCopy(null, value_25087, typ_25088);
    return result;
  

	
}

function cstrToNimstr(c_23287) {
		  var ln = c_23287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		e_21618.trace = nimCopy(null, raw_write_stack_trace_21468(), NTI138);
		throw e_21618;

	
}

function addInt(a_23803, b_23804) {
		    var result = a_23803 + b_23804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_25105, a_25106, b_25107) {
			var Tmp1;

	var result_25108 = 0;

	BeforeRet: do {
			if (!(a_25106 <= i_25105)) Tmp1 = false; else {				Tmp1 = (i_25105 <= b_25107);			}		if (Tmp1) {
		result_25108 = i_25105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_25105, a_25106, b_25107);
		}
		
	} while (false);

	return result_25108;

}

function nimMax(a_24221, b_24222) {
		var Tmp1;

	var result_24223 = 0;

	BeforeRet: do {
		if ((b_24222 <= a_24221)) {
		Tmp1 = a_24221;
		}
		else {
		Tmp1 = b_24222;
		}
		
		result_24223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24223;

}

function subInt(a_23821, b_23822) {
		    var result = a_23821 - b_23822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function nimMin(a_24203, b_24204) {
		var Tmp1;

	var result_24205 = 0;

	BeforeRet: do {
		if ((a_24203 <= b_24204)) {
		Tmp1 = a_24203;
		}
		else {
		Tmp1 = b_24204;
		}
		
		result_24205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24205;

}

function mnewString(len_23463) {
		    return new Array(len_23463);
  

	
}

function chckRange(i_25124, a_25125, b_25126) {
			var Tmp1;

	var result_25127 = 0;

	BeforeRet: do {
			if (!(a_25125 <= i_25124)) Tmp1 = false; else {				Tmp1 = (i_25124 <= b_25126);			}		if (Tmp1) {
		result_25127 = i_25124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_25127;

}

function mulInt(a_23839, b_23840) {
		    var result = a_23839 * b_23840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_55237 = [0];

function new_seq_23336(len_23339) {
	var result_23341 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_23341 = new Array(len_23339); for (var i=0;i<len_23339;++i) {result_23341[i]=null;}	framePtr = F.prev;

	return result_23341;

}

function add_186072(self_186075, key_186076, value_186077) {
	var result_186078 = null;

	var F={procname:"add.add",prev:framePtr,filename:"jObj.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 19;
		self_186075[toJSStr(key_186076)] = (value_186077);
		F.line = 20;
		result_186078 = self_186075;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186078;

}

function add_186036(self_186039, key_186040, value_186041) {
	var result_186042 = null;

	var F={procname:"add.add",prev:framePtr,filename:"jObj.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 19;
		self_186039[toJSStr(key_186040)] = (toJSStr(value_186041));
		F.line = 20;
		result_186042 = self_186039;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186042;

}

function new_jobj_85021() {
	var result_85023 = null;

	var F={procname:"jObj.newJObj",prev:framePtr,filename:"jObj.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 16;
		result_85023 = {m_type: NTI85017};
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_85023;

}

function add_186133(self_186136, key_186137, value_186138) {
	var result_186139 = null;

	var F={procname:"add.add",prev:framePtr,filename:"jObj.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 19;
		self_186136[toJSStr(key_186137)] = (value_186138);
		F.line = 20;
		result_186139 = self_186136;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186139;

}

function add_186200(self_186203, key_186204, value_186205) {
	var result_186206 = null;

	var F={procname:"add.add",prev:framePtr,filename:"jObj.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 19;
		self_186203[toJSStr(key_186204)] = (value_186205);
		F.line = 20;
		result_186206 = self_186203;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186206;

}

function add_186290(self_186293, key_186294, value_186295) {
	var result_186296 = null;

	var F={procname:"add.add",prev:framePtr,filename:"jObj.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 19;
		self_186293[toJSStr(key_186294)] = (value_186295);
		F.line = 20;
		result_186296 = self_186293;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186296;

}

function add_186423(self_186426, key_186427, value_186428) {
	var result_186429 = null;

	var F={procname:"add.add",prev:framePtr,filename:"jObj.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 19;
		self_186426[toJSStr(key_186427)] = (value_186428);
		F.line = 20;
		result_186429 = self_186426;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186429;

}

function is_fat_pointer_24801(ti_24803) {
	var result_24804 = false;

	BeforeRet: do {
		result_24804 = !((ConstSet1[ti_24803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24804;

}

function nimCopyAux(dest_24832, src_24833, n_24835) {
		switch (n_24835.kind) {
		case 0:
			break;
		case 1:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24835.sons.length; i++) {
      nimCopyAux(dest_24832, src_24833, n_24835.sons[i]);
    }
    
			break;
		case 3:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
      for (var i = 0; i < n_24835.sons.length; ++i) {
        nimCopyAux(dest_24832, src_24833, n_24835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_21151(f_21153) {
					var Tmp3;

	var result_21154 = [null];

		var it_21162 = f_21153;
		var i_21164 = 0;
		var total_21166 = 0;
		var temp_frames_21173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI21156);
		L1: do {
				L2: while (true) {
					if (!!((it_21162 == null))) Tmp3 = false; else {						Tmp3 = (i_21164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_21173[i_21164].Field0 = it_21162.procname;
					temp_frames_21173[i_21164].Field1 = it_21162.line;
					i_21164 += 1;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_21162 == null))) break L5;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		result_21154[0] = nimCopy(null, [], NTI138);
		if (!((total_21166 == i_21164))) {
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("(")); } else { result_21154[0] = makeNimstrLit("("); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr(((total_21166 - i_21164))+"")); } else { result_21154[0] = cstrToNimstr(((total_21166 - i_21164))+"").slice(); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_21154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_21421 = 0;
			var colontmp__186589 = 0;
			colontmp__186589 = (i_21164 - 1);
			var res_186590 = colontmp__186589;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_186590)) break L8;
						j_21421 = res_186590;
						add_18638(result_21154, 0, temp_frames_21173[j_21421].Field0);
						if ((0 < temp_frames_21173[j_21421].Field1)) {
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(", line: ")); } else { result_21154[0] = makeNimstrLit(", line: "); };
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr((temp_frames_21173[j_21421].Field1)+"")); } else { result_21154[0] = cstrToNimstr((temp_frames_21173[j_21421].Field1)+"").slice(); };
						}
						
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("\x0A")); } else { result_21154[0] = makeNimstrLit("\x0A"); };
						res_186590 -= 1;
					}
			} while(false);
		} while(false);

	return result_21154[0];

}

function raw_write_stack_trace_21468() {
	var result_21470 = null;

		if (!((framePtr == null))) {
		result_21470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_21151(framePtr) || []), NTI138);
		}
		else {
			result_21470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_21470;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(raw_write_stack_trace_21468()); } else { buf_21530[0] = raw_write_stack_trace_21468().slice(); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function sys_fatal_15062(message_15066) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_15203 = null;
		F.line = 37;
		e_15203 = {m_type: NTI3650, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_15203.message = nimCopy(null, message_15066, NTI138);
		F.line = 39;
		raiseException(e_15203, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_15058(msg_15060) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_15062(msg_15060);
	framePtr = F.prev;

	
}

function failed_assert_impl_15266(msg_15268) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_15058(msg_15268);
	framePtr = F.prev;

	
}

function raiseOverflow() {
		var eHEX60gensym22058_22203 = null;
		eHEX60gensym22058_22203 = {m_type: NTI3646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22058_22203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		eHEX60gensym22058_22203.parent = null;
		raiseException(eHEX60gensym22058_22203, "OverflowError");

	
}

function raiseIndexError(i_22655, a_22656, b_22657) {
		var Tmp1;

		var eHEX60gensym22802_23003 = null;
		eHEX60gensym22802_23003 = {m_type: NTI3658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22657 < a_22656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22657)+"") || []);
		}
		
		eHEX60gensym22802_23003.message = nimCopy(null, Tmp1, NTI138);
		eHEX60gensym22802_23003.parent = null;
		raiseException(eHEX60gensym22802_23003, "IndexError");

	
}

function substr_eq_175704(s_175706, pos_175707, substr_175708) {
	var result_175709 = false;

	var F={procname:"strutils.substrEq",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 378;
		var i_175711 = 0;
		F.line = 379;
		var length_175712 = (substr_175708 != null ? substr_175708.length : 0);
		L1: do {
			F.line = 380;
				L2: while (true) {
				if (!(((i_175711 < length_175712) && (addInt(pos_175707, i_175711) < (s_175706 != null ? s_175706.length : 0))) && (s_175706[chckIndx(addInt(pos_175707, i_175711), 0, (s_175706 != null ? s_175706.length : 0)+0-1)-0] == substr_175708[chckIndx(i_175711, 0, (substr_175708 != null ? substr_175708.length : 0)+0-1)-0]))) break L2;
					F.line = 381;
					i_175711 = addInt(i_175711, 1);
				}
		} while(false);
		F.line = 382;
		result_175709 = (i_175711 == length_175712);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_175709;

}

function raiseRangeError() {
		var eHEX60gensym22457_22603 = null;
		eHEX60gensym22457_22603 = {m_type: NTI3662, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22457_22603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		eHEX60gensym22457_22603.parent = null;
		raiseException(eHEX60gensym22457_22603, "RangeError");

	
}

function substr_30422(s_30424, first_30425, last_30426) {
	var result_30427 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4529;
		var first_30428 = nimMax(first_30425, 0);
		F.line = 4530;
		var l_30430 = nimMax(addInt(subInt(nimMin(last_30426, (s_30424 != null ? (s_30424.length-1) : -1)), first_30428), 1), 0);
		F.line = 4531;
		result_30427 = nimCopy(null, mnewString(chckRange(l_30430, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 4532;
			var i_30439 = 0;
			F.line = 2699;
			var colontmp__186605 = 0;
			F.line = 4532;
			colontmp__186605 = subInt(l_30430, 1);
			F.line = 2710;
			var res_186606 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_186606 <= colontmp__186605)) break L3;
						F.line = 4532;
						i_30439 = res_186606;
						F.line = 4533;
						result_30427[chckIndx(i_30439, 0, (result_30427 != null ? result_30427.length : 0)+0-1)-0] = s_30424[chckIndx(addInt(i_30439, first_30428), 0, (s_30424 != null ? s_30424.length : 0)+0-1)-0];
						F.line = 2713;
						res_186606 = addInt(res_186606, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_30427;

}

function nsuSplitString(s_176546, sep_176547, maxsplit_176549) {
	var result_176551 = null;

	var F={procname:"strutils.split",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if (!((0 < (sep_176547 != null ? sep_176547.length : 0)))) {
		F.line = 769;
		failed_assert_impl_15266(makeNimstrLit("/Volumes/Data/Users/amru/.choosenim/toolchains/nim-1.0.6/lib/pure/strutils.nim(769, 11) `sep.len > 0` "));
		}
		
		F.line = 423;
		result_176551 = nimCopy(null, [], NTI176616);
		L1: do {
			F.line = 424;
			var xHEX60gensym176601_176617 = null;
			F.line = 395;
			var lastHEX60gensym175915_186579 = 0;
			F.line = 396;
			var splitsHEX60gensym175916_186580 = maxsplit_176549;
			L2: do {
				F.line = 529;
					L3: while (true) {
					if (!(lastHEX60gensym175915_186579 <= (s_176546 != null ? s_176546.length : 0))) break L3;
						F.line = 399;
						var firstHEX60gensym175917_186582 = lastHEX60gensym175915_186579;
						L4: do {
							F.line = 400;
								L5: while (true) {
								if (!((lastHEX60gensym175915_186579 < (s_176546 != null ? s_176546.length : 0)) && !(substr_eq_175704(s_176546, lastHEX60gensym175915_186579, sep_176547)))) break L5;
									F.line = 401;
									lastHEX60gensym175915_186579 = addInt(lastHEX60gensym175915_186579, 1);
								}
						} while(false);
						if ((splitsHEX60gensym175916_186580 == 0)) {
						F.line = 402;
						lastHEX60gensym175915_186579 = (s_176546 != null ? s_176546.length : 0);
						}
						
						F.line = 771;
						xHEX60gensym176601_176617 = substr_30422(s_176546, firstHEX60gensym175917_186582, subInt(lastHEX60gensym175915_186579, 1));
						F.line = 424;
						var Tmp6 = nimCopy(null, xHEX60gensym176601_176617, NTI138);
						if (result_176551 != null) { result_176551.push(Tmp6); } else { result_176551 = [Tmp6]; };
						if ((splitsHEX60gensym175916_186580 == 0)) {
						F.line = 404;
						break L2;
						}
						
						F.line = 405;
						splitsHEX60gensym175916_186580 = subInt(splitsHEX60gensym175916_186580, 1);
						F.line = 406;
						lastHEX60gensym175915_186579 = addInt(lastHEX60gensym175915_186579, (sep_176547 != null ? sep_176547.length : 0));
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_176551;

}

function nsuJoinSep(a_180664, sep_180665) {
	var result_180666 = null;

	var F={procname:"strutils.join",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((0 < (a_180664 != null ? a_180664.length : 0))) {
		F.line = 1774;
		var l_180677 = mulInt((sep_180665 != null ? sep_180665.length : 0), subInt((a_180664 != null ? a_180664.length : 0), 1));
		L1: do {
			F.line = 1775;
			var i_180691 = 0;
			F.line = 2699;
			var colontmp__186612 = 0;
			F.line = 1775;
			colontmp__186612 = (a_180664 != null ? (a_180664.length-1) : -1);
			F.line = 2710;
			var res_186613 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_186613 <= colontmp__186612)) break L3;
						F.line = 1775;
						i_180691 = res_186613;
						F.line = 1775;
						l_180677 = addInt(l_180677, (a_180664[chckIndx(i_180691, 0, (a_180664 != null ? a_180664.length : 0)+0-1)-0] != null ? a_180664[chckIndx(i_180691, 0, (a_180664 != null ? a_180664.length : 0)+0-1)-0].length : 0));
						F.line = 2713;
						res_186613 = addInt(res_186613, 1);
					}
			} while(false);
		} while(false);
		F.line = 1776;
		result_180666 = nimCopy(null, mnewString(0), NTI138);
		F.line = 1777;
		if (result_180666 != null) { result_180666 = (result_180666).concat(a_180664[chckIndx(0, 0, (a_180664 != null ? a_180664.length : 0)+0-1)-0]); } else { result_180666 = a_180664[chckIndx(0, 0, (a_180664 != null ? a_180664.length : 0)+0-1)-0].slice(); };
		L4: do {
			F.line = 1778;
			var i_180711 = 0;
			F.line = 2699;
			var colontmp__186619 = 0;
			F.line = 1778;
			colontmp__186619 = (a_180664 != null ? (a_180664.length-1) : -1);
			F.line = 2710;
			var res_186620 = 1;
			L5: do {
				F.line = 2711;
					L6: while (true) {
					if (!(res_186620 <= colontmp__186619)) break L6;
						F.line = 1778;
						i_180711 = res_186620;
						F.line = 1779;
						if (result_180666 != null) { result_180666 = (result_180666).concat(sep_180665); } else { result_180666 = sep_180665.slice(); };
						F.line = 1780;
						if (result_180666 != null) { result_180666 = (result_180666).concat(a_180664[chckIndx(i_180711, 0, (a_180664 != null ? a_180664.length : 0)+0-1)-0]); } else { result_180666 = a_180664[chckIndx(i_180711, 0, (a_180664 != null ? a_180664.length : 0)+0-1)-0].slice(); };
						F.line = 2713;
						res_186620 = addInt(res_186620, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			F.line = 1782;
			result_180666 = nimCopy(null, [], NTI138);
		}
		
	framePtr = F.prev;

	return result_180666;

}

function HEX3Aanonymous_186369() {
	var result_186371 = null;

	var F={procname:"app2Js.:anonymous",prev:framePtr,filename:"app2Js.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 82;
		var s_186372 = nsuSplitString(makeNimstrLit("Hello vue from nim"), makeNimstrLit(" "), -1);
		F.line = 83;
		var reverse_186389 = [];
		L1: do {
			F.line = 84;
			var i_186402 = 0;
			F.line = 2639;
			var colontmp__186566 = 0;
			F.line = 84;
			colontmp__186566 = (s_186372 != null ? (s_186372.length-1) : -1);
			F.line = 2661;
			var res_186571 = colontmp__186566;
			L2: do {
				F.line = 2662;
					L3: while (true) {
					if (!(0 <= res_186571)) break L3;
						F.line = 84;
						i_186402 = res_186571;
						F.line = 85;
						var Tmp4 = nimCopy(null, s_186372[chckIndx(i_186402, 0, (s_186372 != null ? s_186372.length : 0)+0-1)-0], NTI138);
						if (reverse_186389 != null) { reverse_186389.push(Tmp4); } else { reverse_186389 = [Tmp4]; };
						F.line = 2664;
						res_186571 = subInt(res_186571, 1);
					}
			} while(false);
		} while(false);
		F.line = 86;
		result_186371 = toJSStr(nsuJoinSep(reverse_186389, makeNimstrLit(" ")));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186371;

}

function HEX3Aanonymous_186503() {
	var F={procname:"app2Js.:anonymous",prev:framePtr,filename:"app2Js.nim",line:0};
	framePtr = F;
		F.line = 94;
		rawEcho(makeNimstrLit("ready state"));
	framePtr = F.prev;

	
}
initJq(document.body).append(("    <div id=\"app\">\n        {{ message }}\n    </div>\n    "));
var a_186102 = [add_186072(add_186036(new_jobj_85021(), makeNimstrLit("el"), makeNimstrLit("#app")), makeNimstrLit("data"), add_186036(new_jobj_85021(), makeNimstrLit("message"), makeNimstrLit("Hello Vue")))];
initVue(a_186102[0]);
initJq(document.body).append((document.body)).append(("    <div id=\"app-2\">\n    <span v-bind:title=\"message\">\n        Hover your mouse over me for a few seconds\n        to see my dynamically bound title!\n    </span>\n    </div>\n    "));
var b_186169 = [add_186072(add_186036(new_jobj_85021(), makeNimstrLit("el"), makeNimstrLit("#app-2")), makeNimstrLit("data"), add_186133(new_jobj_85021(), makeNimstrLit("message"), {}.toString()))];
initVue(b_186169[0]);
initJq(document.body).append((document.body)).append(("    <div id=\"app-3\">\n    <span v-if=\"seen\">Now you see me</span>\n    </div>\n    "));
var c_186236 = [add_186072(add_186036(new_jobj_85021(), makeNimstrLit("el"), makeNimstrLit("#app-3")), makeNimstrLit("data"), add_186200(new_jobj_85021(), makeNimstrLit("seen"), true))];
initVue(c_186236[0]);
initJq(document.body).append((document.body)).append(("    <div id=\"app-4\">\n    <ol>\n        <li v-for=\"todo in todos\">\n        {{ todo.text }}\n        </li>\n    </ol>\n    </div>\n    "));
var d_186326 = [add_186072(add_186036(new_jobj_85021(), makeNimstrLit("el"), makeNimstrLit("#app-4")), makeNimstrLit("data"), add_186290(new_jobj_85021(), makeNimstrLit("todos"), [add_186036(new_jobj_85021(), makeNimstrLit("text"), makeNimstrLit("Learn nim")), add_186036(new_jobj_85021(), makeNimstrLit("text"), makeNimstrLit("Hack the nim"))]))];
initVue(d_186326[0]);
initJq(document.body).append((document.body)).append(("    <div id=\"app-5\">\n    <p>{{ message }}</p>\n    <button v-on:click=\"reverseMessage\">Reverse Message</button>\n    </div>\n    "));
var e_186459 = [add_186072(add_186072(add_186036(new_jobj_85021(), makeNimstrLit("el"), makeNimstrLit("#app-5")), makeNimstrLit("data"), add_186036(new_jobj_85021(), makeNimstrLit("message"), makeNimstrLit("Hello vue from nim"))), makeNimstrLit("methods"), add_186423(new_jobj_85021(), makeNimstrLit("reverseMessage"), HEX3Aanonymous_186369))];
initVue(e_186459[0]);
console.log((e_186459[0].methods.reverseMessage()));
initJq(document.body).append(("<p>Test</p>"));
initJq(document).ready((HEX3Aanonymous_186503));
